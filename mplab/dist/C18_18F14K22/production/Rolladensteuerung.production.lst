

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Mar 30 07:54:39 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    46  0000                     _ANSEL	set	3966
    47  0000                     _ANSELH	set	3967
    48  0000                     _BAUDCONbits	set	4024
    49  0000                     _CM1CON0	set	3949
    50  0000                     _CM2CON0	set	3947
    51  0000                     _INTCON2bits	set	4081
    52  0000                     _INTCONbits	set	4082
    53  0000                     _IPR1bits	set	3999
    54  0000                     _LATA	set	3977
    55  0000                     _LATB	set	3978
    56  0000                     _LATBbits	set	3978
    57  0000                     _LATC	set	3979
    58  0000                     _LATCbits	set	3979
    59  0000                     _OSCCON	set	4051
    60  0000                     _OSCCONbits	set	4051
    61  0000                     _PIE1bits	set	3997
    62  0000                     _PIR1bits	set	3998
    63  0000                     _PORTA	set	3968
    64  0000                     _PORTAbits	set	3968
    65  0000                     _PORTB	set	3969
    66  0000                     _PORTC	set	3970
    67  0000                     _PORTCbits	set	3970
    68  0000                     _RCONbits	set	4048
    69  0000                     _RCREG	set	4014
    70  0000                     _RCSTA1bits	set	4011
    71  0000                     _SPBRG1	set	4015
    72  0000                     _SPBRGH	set	4016
    73  0000                     _T0CONbits	set	4053
    74  0000                     _T1CONbits	set	4045
    75  0000                     _TMR0H	set	4055
    76  0000                     _TMR0L	set	4054
    77  0000                     _TMR1H	set	4047
    78  0000                     _TMR1L	set	4046
    79  0000                     _TRISA	set	3986
    80  0000                     _TRISAbits	set	3986
    81  0000                     _TRISB	set	3987
    82  0000                     _TRISC	set	3988
    83  0000                     _TRISCbits	set	3988
    84  0000                     _TXREG1	set	4013
    85                           
    86 ;; *************** function _low_isr *****************
    87 ;; Defined at:
    88 ;;		line 39 in file "interrupts.c"
    89 ;; Parameters:    Size  Location     Type
    90 ;;		None
    91 ;; Auto vars:     Size  Location     Type
    92 ;;		None
    93 ;; Return value:  Size  Location     Type
    94 ;;		None               void
    95 ;; Registers used:
    96 ;;		wreg, status,2
    97 ;; Tracked objects:
    98 ;;		On entry : 0/0
    99 ;;		On exit  : 0/0
   100 ;;		Unchanged: 0/0
   101 ;; Data sizes:     COMRAM   BANK0   BANK1
   102 ;;      Params:         0       0       0
   103 ;;      Locals:         0       0       0
   104 ;;      Temps:         17       0       0
   105 ;;      Totals:        17       0       0
   106 ;;Total ram usage:       17 bytes
   107 ;; Hardware stack levels used:    1
   108 ;; Hardware stack levels required when called:    2
   109 ;; This function calls:
   110 ;;		Nothing
   111 ;; This function is called by:
   112 ;;		Interrupt level 1
   113 ;; This function uses a non-reentrant model
   114 ;;
   115                           
   116                           	psect	intcodelo
   117  000018                     __pintcodelo:
   118                           	opt stack 0
   119                           
   120                           ; #config settings
   121  000018                     _low_isr:
   122                           	opt stack 23
   123                           
   124                           ;incstack = 0
   125  000018  CFD8 F001          	movff	status,??_low_isr
   126  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
   127  000020  CFE0 F003          	movff	bsr,??_low_isr+2
   128  000024  CFFA F004          	movff	pclath,??_low_isr+3
   129  000028  CFFB F005          	movff	pclatu,??_low_isr+4
   130  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
   131  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
   132  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
   133  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
   134  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
   135  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
   136  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
   137  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
   138  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
   139  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
   140  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
   141  000058  CFF5 F011          	movff	tablat,??_low_isr+16
   142                           
   143                           ;interrupts.c: 42: if ( INTCONbits.T0IF == 1) {
   144  00005C  A4F2               	btfss	intcon,2,c	;volatile
   145  00005E  D007               	goto	i1l1439
   146                           
   147                           ;interrupts.c: 44: bButtonTimer = 1;
   148  000060  0E01               	movlw	1
   149  000062  6E49               	movwf	_bButtonTimer,c	;volatile
   150                           
   151                           ;interrupts.c: 45: INTCONbits.T0IF = 0;
   152  000064  94F2               	bcf	intcon,2,c	;volatile
   153                           
   154                           ;interrupts.c: 46: TMR0H = 0xA0;
   155  000066  0EA0               	movlw	160
   156  000068  6ED7               	movwf	4055,c	;volatile
   157                           
   158                           ;interrupts.c: 47: TMR0L = 0;
   159  00006A  0E00               	movlw	0
   160  00006C  6ED6               	movwf	4054,c	;volatile
   161  00006E                     i1l1439:
   162                           
   163                           ;interrupts.c: 48: }
   164                           ;interrupts.c: 50: if ( PIR1bits.TMR1IF == 1) {
   165  00006E  A09E               	btfss	3998,0,c	;volatile
   166  000070  D007               	goto	i1l29
   167                           
   168                           ;interrupts.c: 52: bShutterTimer = 1;
   169  000072  0E01               	movlw	1
   170  000074  6E4A               	movwf	_bShutterTimer,c	;volatile
   171                           
   172                           ;interrupts.c: 53: PIR1bits.TMR1IF = 0;
   173  000076  909E               	bcf	3998,0,c	;volatile
   174                           
   175                           ;interrupts.c: 54: TMR1H = 0x3C;
   176  000078  0E3C               	movlw	60
   177  00007A  6ECF               	movwf	4047,c	;volatile
   178                           
   179                           ;interrupts.c: 55: TMR1L = 0xB0;
   180  00007C  0EB0               	movlw	176
   181  00007E  6ECE               	movwf	4046,c	;volatile
   182  000080                     i1l29:
   183  000080  C011  FFF5         	movff	??_low_isr+16,tablat
   184  000084  C010  FFF8         	movff	??_low_isr+15,tblptru
   185  000088  C00F  FFF7         	movff	??_low_isr+14,tblptrh
   186  00008C  C00E  FFF6         	movff	??_low_isr+13,tblptrl
   187  000090  C00D  FFF4         	movff	??_low_isr+12,prodh
   188  000094  C00C  FFF3         	movff	??_low_isr+11,prodl
   189  000098  C00B  FFDA         	movff	??_low_isr+10,fsr2h
   190  00009C  C00A  FFD9         	movff	??_low_isr+9,fsr2l
   191  0000A0  C009  FFE2         	movff	??_low_isr+8,fsr1h
   192  0000A4  C008  FFE1         	movff	??_low_isr+7,fsr1l
   193  0000A8  C007  FFEA         	movff	??_low_isr+6,fsr0h
   194  0000AC  C006  FFE9         	movff	??_low_isr+5,fsr0l
   195  0000B0  C005  FFFB         	movff	??_low_isr+4,pclatu
   196  0000B4  C004  FFFA         	movff	??_low_isr+3,pclath
   197  0000B8  C003  FFE0         	movff	??_low_isr+2,bsr
   198  0000BC  C002  FFE8         	movff	??_low_isr+1,wreg
   199  0000C0  C001  FFD8         	movff	??_low_isr,status
   200  0000C4  0010               	retfie	
   201  0000C6                     __end_of_low_isr:
   202                           	opt stack 0
   203                           pclatu	equ	0xFFB
   204                           pclath	equ	0xFFA
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           prodh	equ	0xFF4
   210                           prodl	equ	0xFF3
   211                           intcon	equ	0xFF2
   212                           fsr0h	equ	0xFEA
   213                           fsr0l	equ	0xFE9
   214                           wreg	equ	0xFE8
   215                           fsr1h	equ	0xFE2
   216                           fsr1l	equ	0xFE1
   217                           bsr	equ	0xFE0
   218                           fsr2h	equ	0xFDA
   219                           fsr2l	equ	0xFD9
   220                           status	equ	0xFD8
   221                           
   222                           	psect	cinit
   223  000984                     __pcinit:
   224                           	opt stack 0
   225  000984                     start_initialization:
   226                           	opt stack 0
   227  000984                     __initialization:
   228                           	opt stack 0
   229                           
   230                           ; Clear objects allocated to BANK0 (152 bytes)
   231  000984  EE00  F060         	lfsr	0,__pbssBANK0
   232  000988  0E98               	movlw	152
   233  00098A                     clear_0:
   234  00098A  6AEE               	clrf	postinc0,c
   235  00098C  06E8               	decf	wreg,f,c
   236  00098E  E1FD               	bnz	clear_0
   237                           
   238                           ; Clear objects allocated to COMRAM (38 bytes)
   239  000990  EE00  F037         	lfsr	0,__pbssCOMRAM
   240  000994  0E26               	movlw	38
   241  000996                     clear_1:
   242  000996  6AEE               	clrf	postinc0,c
   243  000998  06E8               	decf	wreg,f,c
   244  00099A  E1FD               	bnz	clear_1
   245  00099C                     end_of_initialization:
   246                           	opt stack 0
   247  00099C                     __end_of__initialization:
   248                           	opt stack 0
   249  00099C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   250  00099E  6EF8               	movwf	tblptru,c
   251  0009A0  0100               	movlb	0
   252  0009A2  EF3D  F001         	goto	_main	;jump to C main() function
   253                           pclatu	equ	0xFFB
   254                           pclath	equ	0xFFA
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           prodh	equ	0xFF4
   260                           prodl	equ	0xFF3
   261                           intcon	equ	0xFF2
   262                           postinc0	equ	0xFEE
   263                           fsr0h	equ	0xFEA
   264                           fsr0l	equ	0xFE9
   265                           wreg	equ	0xFE8
   266                           fsr1h	equ	0xFE2
   267                           fsr1l	equ	0xFE1
   268                           bsr	equ	0xFE0
   269                           fsr2h	equ	0xFDA
   270                           fsr2l	equ	0xFD9
   271                           status	equ	0xFD8
   272                           
   273                           	psect	bssCOMRAM
   274  000037                     __pbssCOMRAM:
   275                           	opt stack 0
   276  000037                     _fifo:
   277                           	opt stack 0
   278  000037                     	ds	16
   279  000047                     _entprellCounter:
   280                           	opt stack 0
   281  000047                     	ds	2
   282  000049                     _bButtonTimer:
   283                           	opt stack 0
   284  000049                     	ds	1
   285  00004A                     _bShutterTimer:
   286                           	opt stack 0
   287  00004A                     	ds	1
   288  00004B                     _button:
   289                           	opt stack 0
   290  00004B                     	ds	1
   291  00004C                     _c:
   292                           	opt stack 0
   293  00004C                     	ds	1
   294  00004D                     _device:
   295                           	opt stack 0
   296  00004D                     	ds	1
   297  00004E                     _downState:
   298                           	opt stack 0
   299  00004E                     	ds	1
   300  00004F                     _fifoIn:
   301                           	opt stack 0
   302  00004F                     	ds	1
   303  000050                     _fifoOut:
   304                           	opt stack 0
   305  000050                     	ds	1
   306  000051                     _protocolState:
   307                           	opt stack 0
   308  000051                     	ds	1
   309  000052                     _upState:
   310                           	opt stack 0
   311  000052                     	ds	1
   312  000053                     _shutter:
   313                           	opt stack 0
   314  000053                     	ds	10
   315                           pclatu	equ	0xFFB
   316                           pclath	equ	0xFFA
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           prodh	equ	0xFF4
   322                           prodl	equ	0xFF3
   323                           intcon	equ	0xFF2
   324                           postinc0	equ	0xFEE
   325                           fsr0h	equ	0xFEA
   326                           fsr0l	equ	0xFE9
   327                           wreg	equ	0xFE8
   328                           fsr1h	equ	0xFE2
   329                           fsr1l	equ	0xFE1
   330                           bsr	equ	0xFE0
   331                           fsr2h	equ	0xFDA
   332                           fsr2l	equ	0xFD9
   333                           status	equ	0xFD8
   334                           
   335                           	psect	bssBANK0
   336  000060                     __pbssBANK0:
   337                           	opt stack 0
   338  000060                     _data:
   339                           	opt stack 0
   340  000060                     	ds	32
   341  000080                     _buttons:
   342                           	opt stack 0
   343  000080                     	ds	120
   344                           pclatu	equ	0xFFB
   345                           pclath	equ	0xFFA
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           prodh	equ	0xFF4
   351                           prodl	equ	0xFF3
   352                           intcon	equ	0xFF2
   353                           postinc0	equ	0xFEE
   354                           fsr0h	equ	0xFEA
   355                           fsr0l	equ	0xFE9
   356                           wreg	equ	0xFE8
   357                           fsr1h	equ	0xFE2
   358                           fsr1l	equ	0xFE1
   359                           bsr	equ	0xFE0
   360                           fsr2h	equ	0xFDA
   361                           fsr2l	equ	0xFD9
   362                           status	equ	0xFD8
   363                           
   364                           	psect	cstackCOMRAM
   365  000001                     __pcstackCOMRAM:
   366                           	opt stack 0
   367  000001                     ??_low_isr:
   368  000001                     
   369                           ; 1 bytes @ 0x0
   370  000001                     	ds	17
   371  000012                     ??_fifoPut:
   372                           
   373                           ; 0 bytes @ 0x11
   374  000012                     	ds	2
   375  000014                     fifoPut@in:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x13
   379  000014                     	ds	1
   380  000015                     ??_high_isr:
   381                           
   382                           ; 0 bytes @ 0x14
   383  000015                     	ds	14
   384  000023                     high_isr@data:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x22
   388  000023                     	ds	1
   389  000024                     ??_buttonUpReleased:
   390  000024                     ??_buttonDownReleased:
   391  000024                     ??_fifoEmpty:
   392  000024                     ??_fifoGet:
   393  000024                     ?_findButton:
   394                           	opt stack 0
   395  000024                     initButton@bn:
   396                           	opt stack 0
   397  000024                     initShutterStateMachine@i:
   398                           	opt stack 0
   399  000024                     fehler@ls:
   400                           	opt stack 0
   401  000024                     shutterOn@shutternumber:
   402                           	opt stack 0
   403  000024                     shutterOff@shutternumber:
   404                           	opt stack 0
   405  000024                     shutterDirectionUp@shutternumber:
   406                           	opt stack 0
   407  000024                     shutterDirectionDown@shutternumber:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x23
   411  000024                     	ds	1
   412  000025                     initButton@bf:
   413                           	opt stack 0
   414  000025                     buttonUpReleased@shutternumber:
   415                           	opt stack 0
   416  000025                     buttonDownReleased@shutternumber:
   417                           	opt stack 0
   418  000025                     shutterStateMachine@which:
   419                           	opt stack 0
   420  000025                     fehler@modUpDown:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x24
   424  000025                     	ds	1
   425  000026                     fifoGet@v:
   426                           	opt stack 0
   427  000026                     findButton@code:
   428                           	opt stack 0
   429  000026                     fehler@lastState:
   430                           	opt stack 0
   431  000026                     initButton@risingEdge:
   432                           	opt stack 0
   433  000026                     buttonUpReleased@sp:
   434                           	opt stack 0
   435  000026                     buttonDownReleased@sp:
   436                           	opt stack 0
   437  000026                     shutterStateMachine@sp:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x25
   441  000026                     	ds	1
   442  000027                     findButton@i:
   443                           	opt stack 0
   444  000027                     fehler@updown:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x26
   448  000027                     	ds	1
   449  000028                     buttonsReset@i:
   450                           	opt stack 0
   451  000028                     buttonUpPressed@shutternumber:
   452                           	opt stack 0
   453  000028                     buttonDownPressed@shutternumber:
   454                           	opt stack 0
   455  000028                     masterUpReleased@i:
   456                           	opt stack 0
   457  000028                     masterDownReleased@i:
   458                           	opt stack 0
   459  000028                     initButton@fallingEdge:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x27
   463  000028                     	ds	1
   464  000029                     buttonsReset@bp:
   465                           	opt stack 0
   466  000029                     buttonUpPressed@sp:
   467                           	opt stack 0
   468  000029                     buttonDownPressed@sp:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x28
   472  000029                     	ds	1
   473  00002A                     initButton@state:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x29
   477  00002A                     	ds	1
   478  00002B                     masterUpPressed@i:
   479                           	opt stack 0
   480  00002B                     masterDownPressed@i:
   481                           	opt stack 0
   482  00002B                     buttonReceived@bp:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x2A
   486  00002B                     	ds	1
   487  00002C                     initButton@i:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x2B
   491  00002C                     	ds	1
   492  00002D                     initButton@bp:
   493                           	opt stack 0
   494  00002D                     decodeButton@bp:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x2C
   498  00002D                     	ds	2
   499  00002F                     decodeButton@code:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x2E
   503  00002F                     	ds	1
   504  000030                     ??_byteReceived:
   505                           
   506                           ; 0 bytes @ 0x2F
   507  000030                     	ds	1
   508  000031                     byteReceived@checksum:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x30
   512  000031                     	ds	1
   513  000032                     byteReceived@code:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x31
   517  000032                     	ds	1
   518  000033                     byteReceived@b:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x32
   522  000033                     	ds	1
   523  000034                     ??_main:
   524                           
   525                           ; 0 bytes @ 0x33
   526  000034                     	ds	1
   527  000035                     main@recv:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x34
   531  000035                     	ds	2
   532                           pclatu	equ	0xFFB
   533                           pclath	equ	0xFFA
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           prodh	equ	0xFF4
   539                           prodl	equ	0xFF3
   540                           intcon	equ	0xFF2
   541                           postinc0	equ	0xFEE
   542                           fsr0h	equ	0xFEA
   543                           fsr0l	equ	0xFE9
   544                           wreg	equ	0xFE8
   545                           fsr1h	equ	0xFE2
   546                           fsr1l	equ	0xFE1
   547                           bsr	equ	0xFE0
   548                           fsr2h	equ	0xFDA
   549                           fsr2l	equ	0xFD9
   550                           status	equ	0xFD8
   551                           
   552 ;;
   553 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   554 ;;
   555 ;; *************** function _main *****************
   556 ;; Defined at:
   557 ;;		line 55 in file "main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  recv            2   52[COMRAM] int 
   562 ;; Return value:  Size  Location     Type
   563 ;;		None               void
   564 ;; Registers used:
   565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1
   571 ;;      Params:         0       0       0
   572 ;;      Locals:         2       0       0
   573 ;;      Temps:          1       0       0
   574 ;;      Totals:         3       0       0
   575 ;;Total ram usage:        3 bytes
   576 ;; Hardware stack levels required when called:    8
   577 ;; This function calls:
   578 ;;		_buttonsReset
   579 ;;		_byteReceived
   580 ;;		_fifoEmpty
   581 ;;		_fifoGet
   582 ;;		_getNumShutters
   583 ;;		_initButton
   584 ;;		_initButtonTimer
   585 ;;		_initHardware
   586 ;;		_initProtocol
   587 ;;		_initRS485
   588 ;;		_initShutterStateMachine
   589 ;;		_shutterStateMachine
   590 ;;		_testeMasterTaster
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text0
   597  00027A                     __ptext0:
   598                           	opt stack 0
   599  00027A                     _main:
   600                           	opt stack 23
   601                           
   602                           ;main.c: 58: c = 0;
   603                           
   604                           ;incstack = 0
   605  00027A  0E00               	movlw	0
   606  00027C  6E4C               	movwf	_c,c
   607                           
   608                           ;main.c: 60: int recv;
   609                           ;main.c: 62: initHardware();
   610  00027E  EC18  F004         	call	_initHardware	;wreg free
   611                           
   612                           ;main.c: 63: initProtocol();
   613  000282  EC67  F005         	call	_initProtocol	;wreg free
   614                           
   615                           ;main.c: 64: initButtonTimer();
   616  000286  ECB0  F004         	call	_initButtonTimer	;wreg free
   617                           
   618                           ;main.c: 65: initShutterStateMachine();
   619  00028A  ECC7  F003         	call	_initShutterStateMachine	;wreg free
   620                           
   621                           ;main.c: 66: initRS485();
   622  00028E  EC56  F005         	call	_initRS485	;wreg free
   623                           
   624                           ;main.c: 77: initButton( 0,0x14,1,buttonUpPressed,buttonUpReleased,0);
   625  000292  0E14               	movlw	20
   626  000294  6E24               	movwf	initButton@bn,c
   627  000296  0E01               	movlw	1
   628  000298  6E25               	movwf	initButton@bf,c
   629  00029A  0E05               	movlw	high _buttonUpPressed
   630  00029C  6E27               	movwf	initButton@risingEdge+1,c
   631  00029E  0EDE               	movlw	low _buttonUpPressed
   632  0002A0  6E26               	movwf	initButton@risingEdge,c
   633  0002A2  0E08               	movlw	high _buttonUpReleased
   634  0002A4  6E29               	movwf	initButton@fallingEdge+1,c
   635  0002A6  0EAA               	movlw	low _buttonUpReleased
   636  0002A8  6E28               	movwf	initButton@fallingEdge,c
   637  0002AA  0E00               	movlw	0
   638  0002AC  6E2B               	movwf	initButton@state+1,c
   639  0002AE  0E00               	movlw	0
   640  0002B0  6E2A               	movwf	initButton@state,c
   641  0002B2  0E00               	movlw	0
   642  0002B4  EC2B  F002         	call	_initButton
   643                           
   644                           ;main.c: 78: initButton( 1,0x15,1,buttonDownPressed,buttonDownReleased,0);
   645  0002B8  0E15               	movlw	21
   646  0002BA  6E24               	movwf	initButton@bn,c
   647  0002BC  0E01               	movlw	1
   648  0002BE  6E25               	movwf	initButton@bf,c
   649  0002C0  0E05               	movlw	high _buttonDownPressed
   650  0002C2  6E27               	movwf	initButton@risingEdge+1,c
   651  0002C4  0E68               	movlw	low _buttonDownPressed
   652  0002C6  6E26               	movwf	initButton@risingEdge,c
   653  0002C8  0E08               	movlw	high _buttonDownReleased
   654  0002CA  6E29               	movwf	initButton@fallingEdge+1,c
   655  0002CC  0E72               	movlw	low _buttonDownReleased
   656  0002CE  6E28               	movwf	initButton@fallingEdge,c
   657  0002D0  0E00               	movlw	0
   658  0002D2  6E2B               	movwf	initButton@state+1,c
   659  0002D4  0E00               	movlw	0
   660  0002D6  6E2A               	movwf	initButton@state,c
   661  0002D8  0E01               	movlw	1
   662  0002DA  EC2B  F002         	call	_initButton
   663                           
   664                           ;main.c: 79: initButton( 2,0x1A,2,buttonUpPressed,buttonUpReleased,0);
   665  0002DE  0E1A               	movlw	26
   666  0002E0  6E24               	movwf	initButton@bn,c
   667  0002E2  0E02               	movlw	2
   668  0002E4  6E25               	movwf	initButton@bf,c
   669  0002E6  0E05               	movlw	high _buttonUpPressed
   670  0002E8  6E27               	movwf	initButton@risingEdge+1,c
   671  0002EA  0EDE               	movlw	low _buttonUpPressed
   672  0002EC  6E26               	movwf	initButton@risingEdge,c
   673  0002EE  0E08               	movlw	high _buttonUpReleased
   674  0002F0  6E29               	movwf	initButton@fallingEdge+1,c
   675  0002F2  0EAA               	movlw	low _buttonUpReleased
   676  0002F4  6E28               	movwf	initButton@fallingEdge,c
   677  0002F6  0E00               	movlw	0
   678  0002F8  6E2B               	movwf	initButton@state+1,c
   679  0002FA  0E00               	movlw	0
   680  0002FC  6E2A               	movwf	initButton@state,c
   681  0002FE  0E02               	movlw	2
   682  000300  EC2B  F002         	call	_initButton
   683                           
   684                           ;main.c: 80: initButton( 3,0x1B,2,buttonDownPressed,buttonDownReleased,0);
   685  000304  0E1B               	movlw	27
   686  000306  6E24               	movwf	initButton@bn,c
   687  000308  0E02               	movlw	2
   688  00030A  6E25               	movwf	initButton@bf,c
   689  00030C  0E05               	movlw	high _buttonDownPressed
   690  00030E  6E27               	movwf	initButton@risingEdge+1,c
   691  000310  0E68               	movlw	low _buttonDownPressed
   692  000312  6E26               	movwf	initButton@risingEdge,c
   693  000314  0E08               	movlw	high _buttonDownReleased
   694  000316  6E29               	movwf	initButton@fallingEdge+1,c
   695  000318  0E72               	movlw	low _buttonDownReleased
   696  00031A  6E28               	movwf	initButton@fallingEdge,c
   697  00031C  0E00               	movlw	0
   698  00031E  6E2B               	movwf	initButton@state+1,c
   699  000320  0E00               	movlw	0
   700  000322  6E2A               	movwf	initButton@state,c
   701  000324  0E03               	movlw	3
   702  000326  EC2B  F002         	call	_initButton
   703                           
   704                           ;main.c: 95: INTCONbits.GIEH = 1;
   705  00032A  8EF2               	bsf	intcon,7,c	;volatile
   706                           
   707                           ;main.c: 96: INTCONbits.GIEL = 1;
   708  00032C  8CF2               	bsf	intcon,6,c	;volatile
   709  00032E                     l1469:
   710                           
   711                           ;main.c: 106: if (!fifoEmpty()) {
   712  00032E  EC49  F005         	call	_fifoEmpty	;wreg free
   713  000332  0900               	iorlw	0
   714  000334  A4D8               	btfss	status,2,c
   715  000336  D009               	goto	l1475
   716                           
   717                           ;main.c: 108: recv = fifoGet();
   718  000338  EC71  F004         	call	_fifoGet	;wreg free
   719  00033C  6E34               	movwf	??_main& (0+255),c
   720  00033E  5034               	movf	??_main,w,c
   721  000340  6E35               	movwf	main@recv,c
   722  000342  6A36               	clrf	main@recv+1,c
   723                           
   724                           ;main.c: 110: byteReceived(recv);
   725  000344  5035               	movf	main@recv,w,c
   726  000346  EC97  F003         	call	_byteReceived
   727  00034A                     l1475:
   728                           
   729                           ;main.c: 111: }
   730                           ;main.c: 113: if(bButtonTimer) {
   731  00034A  5049               	movf	_bButtonTimer,w,c	;volatile
   732  00034C  B4D8               	btfsc	status,2,c
   733  00034E  D004               	goto	l1481
   734                           
   735                           ;main.c: 114: buttonsReset();
   736  000350  ECC0  F001         	call	_buttonsReset	;wreg free
   737                           
   738                           ;main.c: 115: bButtonTimer = 0;
   739  000354  0E00               	movlw	0
   740  000356  6E49               	movwf	_bButtonTimer,c	;volatile
   741  000358                     l1481:
   742                           
   743                           ;main.c: 116: }
   744                           ;main.c: 118: if(bShutterTimer) {
   745  000358  504A               	movf	_bShutterTimer,w,c	;volatile
   746  00035A  B4D8               	btfsc	status,2,c
   747  00035C  D00E               	goto	l1491
   748                           
   749                           ;main.c: 119: bShutterTimer = 0;
   750  00035E  0E00               	movlw	0
   751  000360  6E4A               	movwf	_bShutterTimer,c	;volatile
   752                           
   753                           ;main.c: 126: for ( c = 0; c < getNumShutters(); c++) {
   754  000362  0E00               	movlw	0
   755  000364  6E4C               	movwf	_c,c
   756  000366  D004               	goto	l1489
   757  000368                     l1485:
   758                           
   759                           ;main.c: 127: shutterStateMachine(c);
   760  000368  504C               	movf	_c,w,c
   761  00036A  EC65  F000         	call	_shutterStateMachine
   762  00036E  2A4C               	incf	_c,f,c
   763  000370                     l1489:
   764  000370  EC6A  F005         	call	_getNumShutters	;wreg free
   765  000374  5C4C               	subwf	_c,w,c
   766  000376  A0D8               	btfss	status,0,c
   767  000378  D7F7               	goto	l1485
   768  00037A                     l1491:
   769                           
   770                           ;main.c: 128: }
   771                           ;main.c: 129: }
   772                           ;main.c: 131: testeMasterTaster();
   773  00037A  EC65  F003         	call	_testeMasterTaster	;wreg free
   774                           
   775                           ;main.c: 133: }
   776  00037E  D7D7               	goto	l1469
   777  000380                     __end_of_main:
   778                           	opt stack 0
   779                           pclatu	equ	0xFFB
   780                           pclath	equ	0xFFA
   781                           tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           tblptrl	equ	0xFF6
   784                           tablat	equ	0xFF5
   785                           prodh	equ	0xFF4
   786                           prodl	equ	0xFF3
   787                           intcon	equ	0xFF2
   788                           postinc0	equ	0xFEE
   789                           fsr0h	equ	0xFEA
   790                           fsr0l	equ	0xFE9
   791                           wreg	equ	0xFE8
   792                           fsr1h	equ	0xFE2
   793                           fsr1l	equ	0xFE1
   794                           bsr	equ	0xFE0
   795                           fsr2h	equ	0xFDA
   796                           fsr2l	equ	0xFD9
   797                           status	equ	0xFD8
   798                           
   799 ;; *************** function _testeMasterTaster *****************
   800 ;; Defined at:
   801 ;;		line 17 in file "masterswitch.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;		None               void
   808 ;; Registers used:
   809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1
   815 ;;      Params:         0       0       0
   816 ;;      Locals:         0       0       0
   817 ;;      Temps:          0       0       0
   818 ;;      Totals:         0       0       0
   819 ;;Total ram usage:        0 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    6
   822 ;; This function calls:
   823 ;;		_masterDownPressed
   824 ;;		_masterDownReleased
   825 ;;		_masterUpPressed
   826 ;;		_masterUpReleased
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text1
   833  0006CA                     __ptext1:
   834                           	opt stack 0
   835  0006CA                     _testeMasterTaster:
   836                           	opt stack 24
   837                           
   838                           ;masterswitch.c: 21: if ( entprellCounter++ < 200)
   839                           
   840                           ;incstack = 0
   841  0006CA  4A47               	infsnz	_entprellCounter,f,c
   842  0006CC  2A48               	incf	_entprellCounter+1,f,c
   843  0006CE  0EC9               	movlw	201
   844  0006D0  5C47               	subwf	_entprellCounter& (0+255),w,c
   845  0006D2  0E00               	movlw	0
   846  0006D4  5848               	subwfb	(_entprellCounter+1)& (0+255),w,c
   847  0006D6  A0D8               	btfss	status,0,c
   848  0006D8  0012               	return	
   849                           
   850                           ;masterswitch.c: 24: entprellCounter = 0;
   851                           
   852                           ;masterswitch.c: 22: return;
   853  0006DA  0E00               	movlw	0
   854  0006DC  6E48               	movwf	_entprellCounter+1,c
   855  0006DE  0E00               	movlw	0
   856  0006E0  6E47               	movwf	_entprellCounter,c
   857                           
   858                           ;masterswitch.c: 26: if ( upState == 0 && PORTAbits.RA0 == 0) {
   859  0006E2  6652               	tstfsz	_upState,c
   860  0006E4  D007               	goto	l1399
   861  0006E6  B080               	btfsc	3968,0,c	;volatile
   862  0006E8  D005               	goto	l1399
   863                           
   864                           ;masterswitch.c: 27: masterUpPressed(0);
   865  0006EA  0E00               	movlw	0
   866  0006EC  EC1F  F005         	call	_masterUpPressed
   867                           
   868                           ;masterswitch.c: 28: upState = 1;
   869  0006F0  0E01               	movlw	1
   870  0006F2  6E52               	movwf	_upState,c
   871  0006F4                     l1399:
   872                           
   873                           ;masterswitch.c: 29: }
   874                           ;masterswitch.c: 32: if ( upState == 1 && PORTAbits.RA0 == 1) {
   875  0006F4  0452               	decf	_upState,w,c
   876  0006F6  B4D8               	btfsc	status,2,c
   877  0006F8  A080               	btfss	3968,0,c	;volatile
   878  0006FA  D005               	goto	l1407
   879                           
   880                           ;masterswitch.c: 33: masterUpReleased(0);
   881  0006FC  0E00               	movlw	0
   882  0006FE  EC11  F005         	call	_masterUpReleased
   883                           
   884                           ;masterswitch.c: 34: upState = 0;
   885  000702  0E00               	movlw	0
   886  000704  6E52               	movwf	_upState,c
   887  000706                     l1407:
   888                           
   889                           ;masterswitch.c: 35: }
   890                           ;masterswitch.c: 37: if ( downState == 0 && PORTAbits.RA1 == 0) {
   891  000706  664E               	tstfsz	_downState,c
   892  000708  D007               	goto	l1415
   893  00070A  B280               	btfsc	3968,1,c	;volatile
   894  00070C  D005               	goto	l1415
   895                           
   896                           ;masterswitch.c: 38: masterDownPressed(0);
   897  00070E  0E00               	movlw	0
   898  000710  EC3B  F005         	call	_masterDownPressed
   899                           
   900                           ;masterswitch.c: 39: downState = 1;
   901  000714  0E01               	movlw	1
   902  000716  6E4E               	movwf	_downState,c
   903  000718                     l1415:
   904                           
   905                           ;masterswitch.c: 40: }
   906                           ;masterswitch.c: 43: if ( downState == 1 && PORTAbits.RA1 == 1) {
   907  000718  044E               	decf	_downState,w,c
   908  00071A  A4D8               	btfss	status,2,c
   909  00071C  0012               	return	
   910  00071E  A280               	btfss	3968,1,c	;volatile
   911  000720  0012               	return	
   912                           
   913                           ;masterswitch.c: 44: masterDownReleased(0);
   914  000722  0E00               	movlw	0
   915  000724  EC2D  F005         	call	_masterDownReleased
   916                           
   917                           ;masterswitch.c: 45: downState = 0;
   918  000728  0E00               	movlw	0
   919  00072A  6E4E               	movwf	_downState,c
   920  00072C  0012               	return	
   921  00072E                     __end_of_testeMasterTaster:
   922                           	opt stack 0
   923                           pclatu	equ	0xFFB
   924                           pclath	equ	0xFFA
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           prodh	equ	0xFF4
   930                           prodl	equ	0xFF3
   931                           intcon	equ	0xFF2
   932                           postinc0	equ	0xFEE
   933                           fsr0h	equ	0xFEA
   934                           fsr0l	equ	0xFE9
   935                           wreg	equ	0xFE8
   936                           fsr1h	equ	0xFE2
   937                           fsr1l	equ	0xFE1
   938                           bsr	equ	0xFE0
   939                           fsr2h	equ	0xFDA
   940                           fsr2l	equ	0xFD9
   941                           status	equ	0xFD8
   942                           
   943 ;; *************** function _masterUpReleased *****************
   944 ;; Defined at:
   945 ;;		line 94 in file "shutter.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  dummy           1    wreg     unsigned char 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  dummy           1    0[COMRAM] unsigned char 
   950 ;;  i               1   39[COMRAM] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;		None               void
   953 ;; Registers used:
   954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1
   960 ;;      Params:         0       0       0
   961 ;;      Locals:         1       0       0
   962 ;;      Temps:          0       0       0
   963 ;;      Totals:         1       0       0
   964 ;;Total ram usage:        1 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    4
   967 ;; This function calls:
   968 ;;		_buttonUpReleased
   969 ;; This function is called by:
   970 ;;		_testeMasterTaster
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text2
   975  000A22                     __ptext2:
   976                           	opt stack 0
   977  000A22                     _masterUpReleased:
   978                           	opt stack 25
   979                           
   980                           ;shutter.c: 96: unsigned char i;
   981                           ;shutter.c: 98: for ( i = 0; i < 5; i++ ) {
   982                           
   983                           ;incstack = 0
   984  000A22  0E00               	movlw	0
   985  000A24  6E28               	movwf	masterUpReleased@i,c
   986  000A26  0E04               	movlw	4
   987  000A28  6428               	cpfsgt	masterUpReleased@i,c
   988  000A2A  D001               	goto	l1119
   989  000A2C  0012               	return	
   990  000A2E                     l1119:
   991                           
   992                           ;shutter.c: 99: buttonUpReleased(i);
   993  000A2E  5028               	movf	masterUpReleased@i,w,c
   994  000A30  EC55  F004         	call	_buttonUpReleased
   995  000A34  2A28               	incf	masterUpReleased@i,f,c
   996  000A36  0E04               	movlw	4
   997  000A38  6428               	cpfsgt	masterUpReleased@i,c
   998  000A3A  D7F9               	goto	l1119
   999  000A3C  0012               	return	
  1000  000A3E                     __end_of_masterUpReleased:
  1001                           	opt stack 0
  1002                           pclatu	equ	0xFFB
  1003                           pclath	equ	0xFFA
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           prodh	equ	0xFF4
  1009                           prodl	equ	0xFF3
  1010                           intcon	equ	0xFF2
  1011                           postinc0	equ	0xFEE
  1012                           fsr0h	equ	0xFEA
  1013                           fsr0l	equ	0xFE9
  1014                           wreg	equ	0xFE8
  1015                           fsr1h	equ	0xFE2
  1016                           fsr1l	equ	0xFE1
  1017                           bsr	equ	0xFE0
  1018                           fsr2h	equ	0xFDA
  1019                           fsr2l	equ	0xFD9
  1020                           status	equ	0xFD8
  1021                           
  1022 ;; *************** function _masterUpPressed *****************
  1023 ;; Defined at:
  1024 ;;		line 85 in file "shutter.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  dummy           1    wreg     unsigned char 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  dummy           1    0[COMRAM] unsigned char 
  1029 ;;  i               1   42[COMRAM] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;		None               void
  1032 ;; Registers used:
  1033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1
  1039 ;;      Params:         0       0       0
  1040 ;;      Locals:         1       0       0
  1041 ;;      Temps:          0       0       0
  1042 ;;      Totals:         1       0       0
  1043 ;;Total ram usage:        1 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    5
  1046 ;; This function calls:
  1047 ;;		_buttonUpPressed
  1048 ;; This function is called by:
  1049 ;;		_testeMasterTaster
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text3
  1054  000A3E                     __ptext3:
  1055                           	opt stack 0
  1056  000A3E                     _masterUpPressed:
  1057                           	opt stack 24
  1058                           
  1059                           ;shutter.c: 87: unsigned char i;
  1060                           ;shutter.c: 89: for ( i = 0; i < 5; i++ ) {
  1061                           
  1062                           ;incstack = 0
  1063  000A3E  0E00               	movlw	0
  1064  000A40  6E2B               	movwf	masterUpPressed@i,c
  1065  000A42  0E04               	movlw	4
  1066  000A44  642B               	cpfsgt	masterUpPressed@i,c
  1067  000A46  D001               	goto	l1107
  1068  000A48  0012               	return	
  1069  000A4A                     l1107:
  1070                           
  1071                           ;shutter.c: 90: buttonUpPressed(i);
  1072  000A4A  502B               	movf	masterUpPressed@i,w,c
  1073  000A4C  ECEF  F002         	call	_buttonUpPressed
  1074  000A50  2A2B               	incf	masterUpPressed@i,f,c
  1075  000A52  0E04               	movlw	4
  1076  000A54  642B               	cpfsgt	masterUpPressed@i,c
  1077  000A56  D7F9               	goto	l1107
  1078  000A58  0012               	return	
  1079  000A5A                     __end_of_masterUpPressed:
  1080                           	opt stack 0
  1081                           pclatu	equ	0xFFB
  1082                           pclath	equ	0xFFA
  1083                           tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           tblptrl	equ	0xFF6
  1086                           tablat	equ	0xFF5
  1087                           prodh	equ	0xFF4
  1088                           prodl	equ	0xFF3
  1089                           intcon	equ	0xFF2
  1090                           postinc0	equ	0xFEE
  1091                           fsr0h	equ	0xFEA
  1092                           fsr0l	equ	0xFE9
  1093                           wreg	equ	0xFE8
  1094                           fsr1h	equ	0xFE2
  1095                           fsr1l	equ	0xFE1
  1096                           bsr	equ	0xFE0
  1097                           fsr2h	equ	0xFDA
  1098                           fsr2l	equ	0xFD9
  1099                           status	equ	0xFD8
  1100                           
  1101 ;; *************** function _masterDownReleased *****************
  1102 ;; Defined at:
  1103 ;;		line 112 in file "shutter.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  dummy           1    wreg     unsigned char 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  dummy           1    0[COMRAM] unsigned char 
  1108 ;;  i               1   39[COMRAM] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;		None               void
  1111 ;; Registers used:
  1112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1
  1118 ;;      Params:         0       0       0
  1119 ;;      Locals:         1       0       0
  1120 ;;      Temps:          0       0       0
  1121 ;;      Totals:         1       0       0
  1122 ;;Total ram usage:        1 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    4
  1125 ;; This function calls:
  1126 ;;		_buttonDownReleased
  1127 ;; This function is called by:
  1128 ;;		_testeMasterTaster
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text4
  1133  000A5A                     __ptext4:
  1134                           	opt stack 0
  1135  000A5A                     _masterDownReleased:
  1136                           	opt stack 25
  1137                           
  1138                           ;shutter.c: 114: unsigned char i;
  1139                           ;shutter.c: 116: for ( i = 0; i < 5; i++ ) {
  1140                           
  1141                           ;incstack = 0
  1142  000A5A  0E00               	movlw	0
  1143  000A5C  6E28               	movwf	masterDownReleased@i,c
  1144  000A5E  0E04               	movlw	4
  1145  000A60  6428               	cpfsgt	masterDownReleased@i,c
  1146  000A62  D001               	goto	l1143
  1147  000A64  0012               	return	
  1148  000A66                     l1143:
  1149                           
  1150                           ;shutter.c: 117: buttonDownReleased(i);
  1151  000A66  5028               	movf	masterDownReleased@i,w,c
  1152  000A68  EC39  F004         	call	_buttonDownReleased
  1153  000A6C  2A28               	incf	masterDownReleased@i,f,c
  1154  000A6E  0E04               	movlw	4
  1155  000A70  6428               	cpfsgt	masterDownReleased@i,c
  1156  000A72  D7F9               	goto	l1143
  1157  000A74  0012               	return	
  1158  000A76                     __end_of_masterDownReleased:
  1159                           	opt stack 0
  1160                           pclatu	equ	0xFFB
  1161                           pclath	equ	0xFFA
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           prodh	equ	0xFF4
  1167                           prodl	equ	0xFF3
  1168                           intcon	equ	0xFF2
  1169                           postinc0	equ	0xFEE
  1170                           fsr0h	equ	0xFEA
  1171                           fsr0l	equ	0xFE9
  1172                           wreg	equ	0xFE8
  1173                           fsr1h	equ	0xFE2
  1174                           fsr1l	equ	0xFE1
  1175                           bsr	equ	0xFE0
  1176                           fsr2h	equ	0xFDA
  1177                           fsr2l	equ	0xFD9
  1178                           status	equ	0xFD8
  1179                           
  1180 ;; *************** function _masterDownPressed *****************
  1181 ;; Defined at:
  1182 ;;		line 103 in file "shutter.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  dummy           1    wreg     unsigned char 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  dummy           1    0[COMRAM] unsigned char 
  1187 ;;  i               1   42[COMRAM] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;		None               void
  1190 ;; Registers used:
  1191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1
  1197 ;;      Params:         0       0       0
  1198 ;;      Locals:         1       0       0
  1199 ;;      Temps:          0       0       0
  1200 ;;      Totals:         1       0       0
  1201 ;;Total ram usage:        1 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    5
  1204 ;; This function calls:
  1205 ;;		_buttonDownPressed
  1206 ;; This function is called by:
  1207 ;;		_testeMasterTaster
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text5
  1212  000A76                     __ptext5:
  1213                           	opt stack 0
  1214  000A76                     _masterDownPressed:
  1215                           	opt stack 24
  1216                           
  1217                           ;shutter.c: 105: unsigned char i;
  1218                           ;shutter.c: 107: for ( i = 0; i < 5; i++ ) {
  1219                           
  1220                           ;incstack = 0
  1221  000A76  0E00               	movlw	0
  1222  000A78  6E2B               	movwf	masterDownPressed@i,c
  1223  000A7A  0E04               	movlw	4
  1224  000A7C  642B               	cpfsgt	masterDownPressed@i,c
  1225  000A7E  D001               	goto	l1131
  1226  000A80  0012               	return	
  1227  000A82                     l1131:
  1228                           
  1229                           ;shutter.c: 108: buttonDownPressed(i);
  1230  000A82  502B               	movf	masterDownPressed@i,w,c
  1231  000A84  ECB4  F002         	call	_buttonDownPressed
  1232  000A88  2A2B               	incf	masterDownPressed@i,f,c
  1233  000A8A  0E04               	movlw	4
  1234  000A8C  642B               	cpfsgt	masterDownPressed@i,c
  1235  000A8E  D7F9               	goto	l1131
  1236  000A90  0012               	return	
  1237  000A92                     __end_of_masterDownPressed:
  1238                           	opt stack 0
  1239                           pclatu	equ	0xFFB
  1240                           pclath	equ	0xFFA
  1241                           tblptru	equ	0xFF8
  1242                           tblptrh	equ	0xFF7
  1243                           tblptrl	equ	0xFF6
  1244                           tablat	equ	0xFF5
  1245                           prodh	equ	0xFF4
  1246                           prodl	equ	0xFF3
  1247                           intcon	equ	0xFF2
  1248                           postinc0	equ	0xFEE
  1249                           fsr0h	equ	0xFEA
  1250                           fsr0l	equ	0xFE9
  1251                           wreg	equ	0xFE8
  1252                           fsr1h	equ	0xFE2
  1253                           fsr1l	equ	0xFE1
  1254                           bsr	equ	0xFE0
  1255                           fsr2h	equ	0xFDA
  1256                           fsr2l	equ	0xFD9
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function _shutterStateMachine *****************
  1260 ;; Defined at:
  1261 ;;		line 122 in file "shutter.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  which           1    wreg     unsigned char 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  which           1   36[COMRAM] unsigned char 
  1266 ;;  sp              2   37[COMRAM] PTR struct shutter
  1267 ;;		 -> shutter(10), 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;		None               void
  1270 ;; Registers used:
  1271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1
  1277 ;;      Params:         0       0       0
  1278 ;;      Locals:         3       0       0
  1279 ;;      Temps:          0       0       0
  1280 ;;      Totals:         3       0       0
  1281 ;;Total ram usage:        3 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    4
  1284 ;; This function calls:
  1285 ;;		_shutterDirectionDown
  1286 ;;		_shutterDirectionUp
  1287 ;;		_shutterOff
  1288 ;;		_shutterOn
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text6
  1295  0000CA                     __ptext6:
  1296                           	opt stack 0
  1297  0000CA                     _shutterStateMachine:
  1298                           	opt stack 26
  1299                           
  1300                           ;incstack = 0
  1301                           ;shutterStateMachine@which stored from wreg
  1302  0000CA  6E25               	movwf	shutterStateMachine@which,c
  1303                           
  1304                           ;shutter.c: 125: SHUTTER *sp = &shutter[which];
  1305  0000CC  5025               	movf	shutterStateMachine@which,w,c
  1306  0000CE  0D02               	mullw	2
  1307  0000D0  0E53               	movlw	low _shutter
  1308  0000D2  24F3               	addwf	prodl,w,c
  1309  0000D4  6E26               	movwf	shutterStateMachine@sp,c
  1310  0000D6  0E00               	movlw	high _shutter
  1311  0000D8  20F4               	addwfc	prodh,w,c
  1312  0000DA  6E27               	movwf	shutterStateMachine@sp+1,c
  1313                           
  1314                           ;shutter.c: 127: if ( sp -> state != 1)
  1315  0000DC  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1316  0000E0  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1317  0000E4  50DF               	movf	indf2,w,c
  1318  0000E6  0A01               	xorlw	1
  1319  0000E8  B4D8               	btfsc	status,2,c
  1320  0000EA  D007               	goto	l299
  1321                           
  1322                           ;shutter.c: 128: sp -> count++;
  1323  0000EC  EE20 F001          	lfsr	2,1
  1324  0000F0  5026               	movf	shutterStateMachine@sp,w,c
  1325  0000F2  26D9               	addwf	fsr2l,f,c
  1326  0000F4  5027               	movf	shutterStateMachine@sp+1,w,c
  1327  0000F6  22DA               	addwfc	fsr2h,f,c
  1328  0000F8  2ADF               	incf	indf2,f,c
  1329  0000FA                     l299:
  1330                           
  1331                           ;shutter.c: 130: if ( sp -> count > 200)
  1332  0000FA  EE20 F001          	lfsr	2,1
  1333  0000FE  5026               	movf	shutterStateMachine@sp,w,c
  1334  000100  26D9               	addwf	fsr2l,f,c
  1335  000102  5027               	movf	shutterStateMachine@sp+1,w,c
  1336  000104  22DA               	addwfc	fsr2h,f,c
  1337  000106  0EC8               	movlw	200
  1338  000108  64DF               	cpfsgt	indf2,c
  1339  00010A  D08D               	goto	l1383
  1340                           
  1341                           ;shutter.c: 131: sp -> state = 8;
  1342  00010C  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1343  000110  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1344  000114  0E08               	movlw	8
  1345  000116  6EDF               	movwf	indf2,c
  1346  000118  D086               	goto	l1383
  1347  00011A                     l1337:
  1348                           
  1349                           ;shutter.c: 139: shutterOff(which);
  1350  00011A  5025               	movf	shutterStateMachine@which,w,c
  1351  00011C  ECE3  F004         	call	_shutterOff
  1352                           
  1353                           ;shutter.c: 140: sp -> state = 1;
  1354  000120  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1355  000124  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1356  000128  0E01               	movlw	1
  1357  00012A  6EDF               	movwf	indf2,c
  1358                           
  1359                           ;shutter.c: 141: break;
  1360  00012C  0012               	return	
  1361  00012E                     l1341:
  1362                           
  1363                           ;shutter.c: 143: shutterDirectionUp(which);
  1364  00012E  5025               	movf	shutterStateMachine@which,w,c
  1365  000130  EC88  F004         	call	_shutterDirectionUp
  1366                           
  1367                           ;shutter.c: 144: sp -> state = 24;
  1368  000134  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1369  000138  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1370  00013C  0E18               	movlw	24
  1371  00013E  6EDF               	movwf	indf2,c
  1372                           
  1373                           ;shutter.c: 145: break;
  1374  000140  0012               	return	
  1375  000142                     l1345:
  1376                           
  1377                           ;shutter.c: 147: shutterDirectionDown(which);
  1378  000142  5025               	movf	shutterStateMachine@which,w,c
  1379  000144  EC9C  F004         	call	_shutterDirectionDown
  1380                           
  1381                           ;shutter.c: 148: sp -> state = 25;
  1382  000148  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1383  00014C  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1384  000150  0E19               	movlw	25
  1385  000152  6EDF               	movwf	indf2,c
  1386                           
  1387                           ;shutter.c: 149: break;
  1388  000154  0012               	return	
  1389  000156                     l1349:
  1390                           
  1391                           ;shutter.c: 151: shutterOn(which);
  1392  000156  5025               	movf	shutterStateMachine@which,w,c
  1393  000158  ECD3  F004         	call	_shutterOn
  1394                           
  1395                           ;shutter.c: 152: sp -> state = 20;
  1396  00015C  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1397  000160  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1398  000164  0E14               	movlw	20
  1399  000166  6EDF               	movwf	indf2,c
  1400                           
  1401                           ;shutter.c: 153: sp -> count = 0;
  1402  000168  EE20 F001          	lfsr	2,1
  1403  00016C  5026               	movf	shutterStateMachine@sp,w,c
  1404  00016E  26D9               	addwf	fsr2l,f,c
  1405  000170  5027               	movf	shutterStateMachine@sp+1,w,c
  1406  000172  22DA               	addwfc	fsr2h,f,c
  1407  000174  0E00               	movlw	0
  1408  000176  6EDF               	movwf	indf2,c
  1409                           
  1410                           ;shutter.c: 154: break;
  1411  000178  0012               	return	
  1412  00017A                     l1355:
  1413                           
  1414                           ;shutter.c: 156: shutterOn(which);
  1415  00017A  5025               	movf	shutterStateMachine@which,w,c
  1416  00017C  ECD3  F004         	call	_shutterOn
  1417                           
  1418                           ;shutter.c: 157: sp -> state = 21;
  1419  000180  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1420  000184  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1421  000188  0E15               	movlw	21
  1422  00018A  6EDF               	movwf	indf2,c
  1423                           
  1424                           ;shutter.c: 158: sp -> count = 0;
  1425  00018C  EE20 F001          	lfsr	2,1
  1426  000190  5026               	movf	shutterStateMachine@sp,w,c
  1427  000192  26D9               	addwf	fsr2l,f,c
  1428  000194  5027               	movf	shutterStateMachine@sp+1,w,c
  1429  000196  22DA               	addwfc	fsr2h,f,c
  1430  000198  0E00               	movlw	0
  1431  00019A  6EDF               	movwf	indf2,c
  1432                           
  1433                           ;shutter.c: 159: break;
  1434  00019C  0012               	return	
  1435  00019E                     l1361:
  1436                           
  1437                           ;shutter.c: 161: shutterOff(which);
  1438  00019E  5025               	movf	shutterStateMachine@which,w,c
  1439  0001A0  ECE3  F004         	call	_shutterOff
  1440                           
  1441                           ;shutter.c: 162: sp -> count = 0;
  1442  0001A4  EE20 F001          	lfsr	2,1
  1443  0001A8  5026               	movf	shutterStateMachine@sp,w,c
  1444  0001AA  26D9               	addwf	fsr2l,f,c
  1445  0001AC  5027               	movf	shutterStateMachine@sp+1,w,c
  1446  0001AE  22DA               	addwfc	fsr2h,f,c
  1447  0001B0  0E00               	movlw	0
  1448  0001B2  6EDF               	movwf	indf2,c
  1449                           
  1450                           ;shutter.c: 163: sp -> state = 27;
  1451  0001B4  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1452  0001B8  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1453  0001BC  0E1B               	movlw	27
  1454  0001BE  6EDF               	movwf	indf2,c
  1455                           
  1456                           ;shutter.c: 164: break;
  1457  0001C0  0012               	return	
  1458  0001C2                     l1367:
  1459                           
  1460                           ;shutter.c: 166: shutterOff(which);
  1461  0001C2  5025               	movf	shutterStateMachine@which,w,c
  1462  0001C4  ECE3  F004         	call	_shutterOff
  1463                           
  1464                           ;shutter.c: 167: sp -> count = 0;
  1465  0001C8  EE20 F001          	lfsr	2,1
  1466  0001CC  5026               	movf	shutterStateMachine@sp,w,c
  1467  0001CE  26D9               	addwf	fsr2l,f,c
  1468  0001D0  5027               	movf	shutterStateMachine@sp+1,w,c
  1469  0001D2  22DA               	addwfc	fsr2h,f,c
  1470  0001D4  0E00               	movlw	0
  1471  0001D6  6EDF               	movwf	indf2,c
  1472                           
  1473                           ;shutter.c: 168: sp -> state = 26;
  1474  0001D8  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1475  0001DC  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1476  0001E0  0E1A               	movlw	26
  1477  0001E2  6EDF               	movwf	indf2,c
  1478                           
  1479                           ;shutter.c: 169: break;
  1480  0001E4  0012               	return	
  1481  0001E6                     l1373:
  1482                           
  1483                           ;shutter.c: 173: if ( sp -> count > 5)
  1484  0001E6  EE20 F001          	lfsr	2,1
  1485  0001EA  5026               	movf	shutterStateMachine@sp,w,c
  1486  0001EC  26D9               	addwf	fsr2l,f,c
  1487  0001EE  5027               	movf	shutterStateMachine@sp+1,w,c
  1488  0001F0  22DA               	addwfc	fsr2h,f,c
  1489  0001F2  0E05               	movlw	5
  1490  0001F4  64DF               	cpfsgt	indf2,c
  1491  0001F6  0012               	return	
  1492                           
  1493                           ;shutter.c: 174: sp -> state = 22;
  1494  0001F8  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1495  0001FC  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1496  000200  0E16               	movlw	22
  1497  000202  6EDF               	movwf	indf2,c
  1498  000204  0012               	return	
  1499  000206                     l1377:
  1500                           
  1501                           ;shutter.c: 179: if ( sp -> count > 5)
  1502  000206  EE20 F001          	lfsr	2,1
  1503  00020A  5026               	movf	shutterStateMachine@sp,w,c
  1504  00020C  26D9               	addwf	fsr2l,f,c
  1505  00020E  5027               	movf	shutterStateMachine@sp+1,w,c
  1506  000210  22DA               	addwfc	fsr2h,f,c
  1507  000212  0E05               	movlw	5
  1508  000214  64DF               	cpfsgt	indf2,c
  1509  000216  0012               	return	
  1510                           
  1511                           ;shutter.c: 180: sp -> state = 23;
  1512  000218  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1513  00021C  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1514  000220  0E17               	movlw	23
  1515  000222  6EDF               	movwf	indf2,c
  1516  000224  0012               	return	
  1517  000226                     l1383:
  1518  000226  C026  FFD9         	movff	shutterStateMachine@sp,fsr2l
  1519  00022A  C027  FFDA         	movff	shutterStateMachine@sp+1,fsr2h
  1520  00022E  50DF               	movf	indf2,w,c
  1521                           
  1522                           ; Switch size 1, requested type "space"
  1523                           ; Number of cases is 12, Range of values is 1 to 27
  1524                           ; switch strategies available:
  1525                           ; Name         Instructions Cycles
  1526                           ; simple_byte           37    19 (average)
  1527                           ;	Chosen strategy is simple_byte
  1528  000230  0A01               	xorlw	1	; case 1
  1529  000232  B4D8               	btfsc	status,2,c
  1530  000234  0012               	return	
  1531  000236  0A03               	xorlw	3	; case 2
  1532  000238  B4D8               	btfsc	status,2,c
  1533  00023A  D7C3               	goto	l1367
  1534  00023C  0A01               	xorlw	1	; case 3
  1535  00023E  B4D8               	btfsc	status,2,c
  1536  000240  D7AE               	goto	l1361
  1537  000242  0A0B               	xorlw	11	; case 8
  1538  000244  B4D8               	btfsc	status,2,c
  1539  000246  D769               	goto	l1337
  1540  000248  0A1C               	xorlw	28	; case 20
  1541  00024A  B4D8               	btfsc	status,2,c
  1542  00024C  0012               	return	
  1543  00024E  0A01               	xorlw	1	; case 21
  1544  000250  B4D8               	btfsc	status,2,c
  1545  000252  0012               	return	
  1546  000254  0A03               	xorlw	3	; case 22
  1547  000256  B4D8               	btfsc	status,2,c
  1548  000258  D76A               	goto	l1341
  1549  00025A  0A01               	xorlw	1	; case 23
  1550  00025C  B4D8               	btfsc	status,2,c
  1551  00025E  D771               	goto	l1345
  1552  000260  0A0F               	xorlw	15	; case 24
  1553  000262  B4D8               	btfsc	status,2,c
  1554  000264  D778               	goto	l1349
  1555  000266  0A01               	xorlw	1	; case 25
  1556  000268  B4D8               	btfsc	status,2,c
  1557  00026A  D787               	goto	l1355
  1558  00026C  0A03               	xorlw	3	; case 26
  1559  00026E  B4D8               	btfsc	status,2,c
  1560  000270  D7CA               	goto	l1377
  1561  000272  0A01               	xorlw	1	; case 27
  1562  000274  A4D8               	btfss	status,2,c
  1563  000276  0012               	return	
  1564  000278  D7B6               	goto	l1373
  1565  00027A                     __end_of_shutterStateMachine:
  1566                           	opt stack 0
  1567                           pclatu	equ	0xFFB
  1568                           pclath	equ	0xFFA
  1569                           tblptru	equ	0xFF8
  1570                           tblptrh	equ	0xFF7
  1571                           tblptrl	equ	0xFF6
  1572                           tablat	equ	0xFF5
  1573                           prodh	equ	0xFF4
  1574                           prodl	equ	0xFF3
  1575                           intcon	equ	0xFF2
  1576                           postinc0	equ	0xFEE
  1577                           fsr0h	equ	0xFEA
  1578                           fsr0l	equ	0xFE9
  1579                           wreg	equ	0xFE8
  1580                           fsr1h	equ	0xFE2
  1581                           fsr1l	equ	0xFE1
  1582                           bsr	equ	0xFE0
  1583                           indf2	equ	0xFDF
  1584                           fsr2h	equ	0xFDA
  1585                           fsr2l	equ	0xFD9
  1586                           status	equ	0xFD8
  1587                           
  1588 ;; *************** function _shutterOn *****************
  1589 ;; Defined at:
  1590 ;;		line 18 in file "shutterhardware.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  shutternumbe    1    wreg     unsigned char 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  shutternumbe    1   35[COMRAM] unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;		None               void
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1
  1604 ;;      Params:         0       0       0
  1605 ;;      Locals:         1       0       0
  1606 ;;      Temps:          0       0       0
  1607 ;;      Totals:         1       0       0
  1608 ;;Total ram usage:        1 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    3
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_shutterStateMachine
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text7
  1619  0009A6                     __ptext7:
  1620                           	opt stack 0
  1621  0009A6                     _shutterOn:
  1622                           	opt stack 26
  1623                           
  1624                           ;incstack = 0
  1625                           ;shutterOn@shutternumber stored from wreg
  1626  0009A6  6E24               	movwf	shutterOn@shutternumber,c
  1627                           
  1628                           ;shutterhardware.c: 20: switch (shutternumber) {
  1629  0009A8  D006               	goto	l1179
  1630  0009AA                     l343:
  1631  0009AA  8682               	bsf	3970,3,c	;volatile
  1632  0009AC  9C94               	bcf	3988,6,c	;volatile
  1633  0009AE  0012               	return	
  1634  0009B0                     l345:
  1635  0009B0  8A80               	bsf	3968,5,c	;volatile
  1636  0009B2  9892               	bcf	3986,4,c	;volatile
  1637  0009B4  0012               	return	
  1638  0009B6                     l1179:
  1639  0009B6  5024               	movf	shutterOn@shutternumber,w,c
  1640                           
  1641                           ; Switch size 1, requested type "space"
  1642                           ; Number of cases is 2, Range of values is 1 to 2
  1643                           ; switch strategies available:
  1644                           ; Name         Instructions Cycles
  1645                           ; simple_byte            7     4 (average)
  1646                           ;	Chosen strategy is simple_byte
  1647  0009B8  0A01               	xorlw	1	; case 1
  1648  0009BA  B4D8               	btfsc	status,2,c
  1649  0009BC  D7F6               	goto	l343
  1650  0009BE  0A03               	xorlw	3	; case 2
  1651  0009C0  A4D8               	btfss	status,2,c
  1652  0009C2  0012               	return	
  1653  0009C4  D7F5               	goto	l345
  1654  0009C6                     __end_of_shutterOn:
  1655                           	opt stack 0
  1656                           pclatu	equ	0xFFB
  1657                           pclath	equ	0xFFA
  1658                           tblptru	equ	0xFF8
  1659                           tblptrh	equ	0xFF7
  1660                           tblptrl	equ	0xFF6
  1661                           tablat	equ	0xFF5
  1662                           prodh	equ	0xFF4
  1663                           prodl	equ	0xFF3
  1664                           intcon	equ	0xFF2
  1665                           postinc0	equ	0xFEE
  1666                           fsr0h	equ	0xFEA
  1667                           fsr0l	equ	0xFE9
  1668                           wreg	equ	0xFE8
  1669                           fsr1h	equ	0xFE2
  1670                           fsr1l	equ	0xFE1
  1671                           bsr	equ	0xFE0
  1672                           indf2	equ	0xFDF
  1673                           fsr2h	equ	0xFDA
  1674                           fsr2l	equ	0xFD9
  1675                           status	equ	0xFD8
  1676                           
  1677 ;; *************** function _shutterOff *****************
  1678 ;; Defined at:
  1679 ;;		line 33 in file "shutterhardware.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  shutternumbe    1    wreg     unsigned char 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  shutternumbe    1   35[COMRAM] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;		None               void
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1
  1693 ;;      Params:         0       0       0
  1694 ;;      Locals:         1       0       0
  1695 ;;      Temps:          0       0       0
  1696 ;;      Totals:         1       0       0
  1697 ;;Total ram usage:        1 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    3
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_shutterStateMachine
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text8
  1708  0009C6                     __ptext8:
  1709                           	opt stack 0
  1710  0009C6                     _shutterOff:
  1711                           	opt stack 26
  1712                           
  1713                           ;incstack = 0
  1714                           ;shutterOff@shutternumber stored from wreg
  1715  0009C6  6E24               	movwf	shutterOff@shutternumber,c
  1716                           
  1717                           ;shutterhardware.c: 35: switch (shutternumber) {
  1718  0009C8  D006               	goto	l1153
  1719  0009CA                     l350:
  1720  0009CA  9682               	bcf	3970,3,c	;volatile
  1721  0009CC  8C94               	bsf	3988,6,c	;volatile
  1722  0009CE  0012               	return	
  1723  0009D0                     l352:
  1724  0009D0  9A80               	bcf	3968,5,c	;volatile
  1725  0009D2  8892               	bsf	3986,4,c	;volatile
  1726  0009D4  0012               	return	
  1727  0009D6                     l1153:
  1728  0009D6  5024               	movf	shutterOff@shutternumber,w,c
  1729                           
  1730                           ; Switch size 1, requested type "space"
  1731                           ; Number of cases is 2, Range of values is 1 to 2
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte            7     4 (average)
  1735                           ;	Chosen strategy is simple_byte
  1736  0009D8  0A01               	xorlw	1	; case 1
  1737  0009DA  B4D8               	btfsc	status,2,c
  1738  0009DC  D7F6               	goto	l350
  1739  0009DE  0A03               	xorlw	3	; case 2
  1740  0009E0  A4D8               	btfss	status,2,c
  1741  0009E2  0012               	return	
  1742  0009E4  D7F5               	goto	l352
  1743  0009E6                     __end_of_shutterOff:
  1744                           	opt stack 0
  1745                           pclatu	equ	0xFFB
  1746                           pclath	equ	0xFFA
  1747                           tblptru	equ	0xFF8
  1748                           tblptrh	equ	0xFF7
  1749                           tblptrl	equ	0xFF6
  1750                           tablat	equ	0xFF5
  1751                           prodh	equ	0xFF4
  1752                           prodl	equ	0xFF3
  1753                           intcon	equ	0xFF2
  1754                           postinc0	equ	0xFEE
  1755                           fsr0h	equ	0xFEA
  1756                           fsr0l	equ	0xFE9
  1757                           wreg	equ	0xFE8
  1758                           fsr1h	equ	0xFE2
  1759                           fsr1l	equ	0xFE1
  1760                           bsr	equ	0xFE0
  1761                           indf2	equ	0xFDF
  1762                           fsr2h	equ	0xFDA
  1763                           fsr2l	equ	0xFD9
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function _shutterDirectionUp *****************
  1767 ;; Defined at:
  1768 ;;		line 50 in file "shutterhardware.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  shutternumbe    1    wreg     unsigned char 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  shutternumbe    1   35[COMRAM] unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;		None               void
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1
  1782 ;;      Params:         0       0       0
  1783 ;;      Locals:         1       0       0
  1784 ;;      Temps:          0       0       0
  1785 ;;      Totals:         1       0       0
  1786 ;;Total ram usage:        1 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    3
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_shutterStateMachine
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text9
  1797  000910                     __ptext9:
  1798                           	opt stack 0
  1799  000910                     _shutterDirectionUp:
  1800                           	opt stack 26
  1801                           
  1802                           ;incstack = 0
  1803                           ;shutterDirectionUp@shutternumber stored from wreg
  1804  000910  6E24               	movwf	shutterDirectionUp@shutternumber,c
  1805                           
  1806                           ;shutterhardware.c: 53: switch (shutternumber) {
  1807  000912  D00A               	goto	l1163
  1808  000914                     l357:
  1809                           
  1810                           ;shutterhardware.c: 55: if ( TRISCbits.TRISC6 == 0)
  1811  000914  AC94               	btfss	3988,6,c	;volatile
  1812  000916  0012               	return	
  1813                           
  1814                           ;shutterhardware.c: 57: PORTCbits.RC6 = 0; TRISCbits.TRISC6 = 0; break;
  1815                           
  1816                           ;shutterhardware.c: 56: return;
  1817  000918  9C82               	bcf	3970,6,c	;volatile
  1818  00091A  9C94               	bcf	3988,6,c	;volatile
  1819  00091C  0012               	return	
  1820  00091E                     l361:
  1821                           
  1822                           ;shutterhardware.c: 59: if ( TRISAbits.TRISA4 == 0)
  1823  00091E  A892               	btfss	3986,4,c	;volatile
  1824  000920  0012               	return	
  1825                           
  1826                           ;shutterhardware.c: 61: PORTAbits.RA4 = 0; TRISAbits.TRISA4 = 0; break;
  1827                           
  1828                           ;shutterhardware.c: 60: return;
  1829  000922  9880               	bcf	3968,4,c	;volatile
  1830  000924  9892               	bcf	3986,4,c	;volatile
  1831  000926  0012               	return	
  1832  000928                     l1163:
  1833  000928  5024               	movf	shutterDirectionUp@shutternumber,w,c
  1834                           
  1835                           ; Switch size 1, requested type "space"
  1836                           ; Number of cases is 2, Range of values is 1 to 2
  1837                           ; switch strategies available:
  1838                           ; Name         Instructions Cycles
  1839                           ; simple_byte            7     4 (average)
  1840                           ;	Chosen strategy is simple_byte
  1841  00092A  0A01               	xorlw	1	; case 1
  1842  00092C  B4D8               	btfsc	status,2,c
  1843  00092E  D7F2               	goto	l357
  1844  000930  0A03               	xorlw	3	; case 2
  1845  000932  A4D8               	btfss	status,2,c
  1846  000934  0012               	return	
  1847  000936  D7F3               	goto	l361
  1848  000938                     __end_of_shutterDirectionUp:
  1849                           	opt stack 0
  1850                           pclatu	equ	0xFFB
  1851                           pclath	equ	0xFFA
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           prodh	equ	0xFF4
  1857                           prodl	equ	0xFF3
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           fsr0h	equ	0xFEA
  1861                           fsr0l	equ	0xFE9
  1862                           wreg	equ	0xFE8
  1863                           fsr1h	equ	0xFE2
  1864                           fsr1l	equ	0xFE1
  1865                           bsr	equ	0xFE0
  1866                           indf2	equ	0xFDF
  1867                           fsr2h	equ	0xFDA
  1868                           fsr2l	equ	0xFD9
  1869                           status	equ	0xFD8
  1870                           
  1871 ;; *************** function _shutterDirectionDown *****************
  1872 ;; Defined at:
  1873 ;;		line 67 in file "shutterhardware.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  shutternumbe    1    wreg     unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  shutternumbe    1   35[COMRAM] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;		None               void
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1
  1887 ;;      Params:         0       0       0
  1888 ;;      Locals:         1       0       0
  1889 ;;      Temps:          0       0       0
  1890 ;;      Totals:         1       0       0
  1891 ;;Total ram usage:        1 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    3
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_shutterStateMachine
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text10
  1902  000938                     __ptext10:
  1903                           	opt stack 0
  1904  000938                     _shutterDirectionDown:
  1905                           	opt stack 26
  1906                           
  1907                           ;incstack = 0
  1908                           ;shutterDirectionDown@shutternumber stored from wreg
  1909  000938  6E24               	movwf	shutterDirectionDown@shutternumber,c
  1910                           
  1911                           ;shutterhardware.c: 69: switch (shutternumber) {
  1912  00093A  D00A               	goto	l1173
  1913  00093C                     l366:
  1914                           
  1915                           ;shutterhardware.c: 71: if ( TRISCbits.TRISC6 == 0)
  1916  00093C  AC94               	btfss	3988,6,c	;volatile
  1917  00093E  0012               	return	
  1918                           
  1919                           ;shutterhardware.c: 73: PORTCbits.RC6 = 1; TRISCbits.TRISC6 = 0; break;
  1920                           
  1921                           ;shutterhardware.c: 72: return;
  1922  000940  8C82               	bsf	3970,6,c	;volatile
  1923  000942  9C94               	bcf	3988,6,c	;volatile
  1924  000944  0012               	return	
  1925  000946                     l370:
  1926                           
  1927                           ;shutterhardware.c: 75: if ( TRISAbits.TRISA4 == 0)
  1928  000946  A892               	btfss	3986,4,c	;volatile
  1929  000948  0012               	return	
  1930                           
  1931                           ;shutterhardware.c: 77: PORTAbits.RA4 = 1; TRISAbits.TRISA4 = 0; break;
  1932                           
  1933                           ;shutterhardware.c: 76: return;
  1934  00094A  8880               	bsf	3968,4,c	;volatile
  1935  00094C  9892               	bcf	3986,4,c	;volatile
  1936  00094E  0012               	return	
  1937  000950                     l1173:
  1938  000950  5024               	movf	shutterDirectionDown@shutternumber,w,c
  1939                           
  1940                           ; Switch size 1, requested type "space"
  1941                           ; Number of cases is 2, Range of values is 1 to 2
  1942                           ; switch strategies available:
  1943                           ; Name         Instructions Cycles
  1944                           ; simple_byte            7     4 (average)
  1945                           ;	Chosen strategy is simple_byte
  1946  000952  0A01               	xorlw	1	; case 1
  1947  000954  B4D8               	btfsc	status,2,c
  1948  000956  D7F2               	goto	l366
  1949  000958  0A03               	xorlw	3	; case 2
  1950  00095A  A4D8               	btfss	status,2,c
  1951  00095C  0012               	return	
  1952  00095E  D7F3               	goto	l370
  1953  000960                     __end_of_shutterDirectionDown:
  1954                           	opt stack 0
  1955                           pclatu	equ	0xFFB
  1956                           pclath	equ	0xFFA
  1957                           tblptru	equ	0xFF8
  1958                           tblptrh	equ	0xFF7
  1959                           tblptrl	equ	0xFF6
  1960                           tablat	equ	0xFF5
  1961                           prodh	equ	0xFF4
  1962                           prodl	equ	0xFF3
  1963                           intcon	equ	0xFF2
  1964                           postinc0	equ	0xFEE
  1965                           fsr0h	equ	0xFEA
  1966                           fsr0l	equ	0xFE9
  1967                           wreg	equ	0xFE8
  1968                           fsr1h	equ	0xFE2
  1969                           fsr1l	equ	0xFE1
  1970                           bsr	equ	0xFE0
  1971                           indf2	equ	0xFDF
  1972                           fsr2h	equ	0xFDA
  1973                           fsr2l	equ	0xFD9
  1974                           status	equ	0xFD8
  1975                           
  1976 ;; *************** function _initShutterStateMachine *****************
  1977 ;; Defined at:
  1978 ;;		line 197 in file "shutter.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  i               1   35[COMRAM] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;		None               void
  1985 ;; Registers used:
  1986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1
  1992 ;;      Params:         0       0       0
  1993 ;;      Locals:         1       0       0
  1994 ;;      Temps:          0       0       0
  1995 ;;      Totals:         1       0       0
  1996 ;;Total ram usage:        1 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    4
  1999 ;; This function calls:
  2000 ;;		_getNumShutters
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text11
  2007  00078E                     __ptext11:
  2008                           	opt stack 0
  2009  00078E                     _initShutterStateMachine:
  2010                           	opt stack 26
  2011                           
  2012                           ;shutter.c: 199: unsigned char i;
  2013                           ;shutter.c: 201: T1CONbits.RD16 = 1;
  2014                           
  2015                           ;incstack = 0
  2016  00078E  8ECD               	bsf	4045,7,c	;volatile
  2017                           
  2018                           ;shutter.c: 202: T1CONbits.T1CKPS = 2;
  2019  000790  50CD               	movf	4045,w,c	;volatile
  2020  000792  0BCF               	andlw	-49
  2021  000794  0920               	iorlw	32
  2022  000796  6ECD               	movwf	4045,c	;volatile
  2023                           
  2024                           ;shutter.c: 204: T1CONbits.T1OSCEN = 0;
  2025  000798  96CD               	bcf	4045,3,c	;volatile
  2026                           
  2027                           ;shutter.c: 205: T1CONbits.TMR1CS = 0;
  2028  00079A  92CD               	bcf	4045,1,c	;volatile
  2029                           
  2030                           ;shutter.c: 206: T1CONbits.TMR1ON = 1;
  2031  00079C  80CD               	bsf	4045,0,c	;volatile
  2032                           
  2033                           ;shutter.c: 207: IPR1bits.TMR1IP = 0;
  2034  00079E  909F               	bcf	3999,0,c	;volatile
  2035                           
  2036                           ;shutter.c: 208: PIE1bits.TMR1IE = 1;
  2037  0007A0  809D               	bsf	3997,0,c	;volatile
  2038                           
  2039                           ;shutter.c: 210: for (i = 0; i < getNumShutters(); i++) {
  2040  0007A2  0E00               	movlw	0
  2041  0007A4  6E24               	movwf	initShutterStateMachine@i,c
  2042  0007A6  D019               	goto	l1233
  2043  0007A8                     l1229:
  2044                           
  2045                           ;shutter.c: 211: shutter[i].state = 1;
  2046  0007A8  5024               	movf	initShutterStateMachine@i,w,c
  2047  0007AA  0D02               	mullw	2
  2048  0007AC  0E53               	movlw	low _shutter
  2049  0007AE  24F3               	addwf	prodl,w,c
  2050  0007B0  6ED9               	movwf	fsr2l,c
  2051  0007B2  0E00               	movlw	high _shutter
  2052  0007B4  20F4               	addwfc	prodh,w,c
  2053  0007B6  6EDA               	movwf	fsr2h,c
  2054  0007B8  0E01               	movlw	1
  2055  0007BA  6EDF               	movwf	indf2,c
  2056                           
  2057                           ;shutter.c: 212: shutter[i].count = 0;
  2058  0007BC  5024               	movf	initShutterStateMachine@i,w,c
  2059  0007BE  0D02               	mullw	2
  2060  0007C0  0E01               	movlw	1
  2061  0007C2  26F3               	addwf	prodl,f,c
  2062  0007C4  0E00               	movlw	0
  2063  0007C6  22F4               	addwfc	prodh,f,c
  2064  0007C8  0E53               	movlw	low _shutter
  2065  0007CA  24F3               	addwf	prodl,w,c
  2066  0007CC  6ED9               	movwf	fsr2l,c
  2067  0007CE  0E00               	movlw	high _shutter
  2068  0007D0  20F4               	addwfc	prodh,w,c
  2069  0007D2  6EDA               	movwf	fsr2h,c
  2070  0007D4  0E00               	movlw	0
  2071  0007D6  6EDF               	movwf	indf2,c
  2072  0007D8  2A24               	incf	initShutterStateMachine@i,f,c
  2073  0007DA                     l1233:
  2074  0007DA  EC6A  F005         	call	_getNumShutters	;wreg free
  2075  0007DE  5C24               	subwf	initShutterStateMachine@i,w,c
  2076  0007E0  B0D8               	btfsc	status,0,c
  2077  0007E2  0012               	return	
  2078  0007E4  D7E1               	goto	l1229
  2079  0007E6                     __end_of_initShutterStateMachine:
  2080                           	opt stack 0
  2081                           pclatu	equ	0xFFB
  2082                           pclath	equ	0xFFA
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           intcon	equ	0xFF2
  2090                           postinc0	equ	0xFEE
  2091                           fsr0h	equ	0xFEA
  2092                           fsr0l	equ	0xFE9
  2093                           wreg	equ	0xFE8
  2094                           fsr1h	equ	0xFE2
  2095                           fsr1l	equ	0xFE1
  2096                           bsr	equ	0xFE0
  2097                           indf2	equ	0xFDF
  2098                           fsr2h	equ	0xFDA
  2099                           fsr2l	equ	0xFD9
  2100                           status	equ	0xFD8
  2101                           
  2102 ;; *************** function _getNumShutters *****************
  2103 ;; Defined at:
  2104 ;;		line 226 in file "shutter.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      unsigned char 
  2111 ;; Registers used:
  2112 ;;		wreg
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1
  2118 ;;      Params:         0       0       0
  2119 ;;      Locals:         0       0       0
  2120 ;;      Temps:          0       0       0
  2121 ;;      Totals:         0       0       0
  2122 ;;Total ram usage:        0 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    3
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;;		_initShutterStateMachine
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text12
  2134  000AD4                     __ptext12:
  2135                           	opt stack 0
  2136  000AD4                     _getNumShutters:
  2137                           	opt stack 26
  2138                           
  2139                           ;shutter.c: 228: return 5;
  2140                           
  2141                           ;incstack = 0
  2142  000AD4  0E05               	movlw	5
  2143  000AD6  0012               	return	
  2144  000AD8                     __end_of_getNumShutters:
  2145                           	opt stack 0
  2146                           pclatu	equ	0xFFB
  2147                           pclath	equ	0xFFA
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           prodh	equ	0xFF4
  2153                           prodl	equ	0xFF3
  2154                           intcon	equ	0xFF2
  2155                           postinc0	equ	0xFEE
  2156                           fsr0h	equ	0xFEA
  2157                           fsr0l	equ	0xFE9
  2158                           wreg	equ	0xFE8
  2159                           fsr1h	equ	0xFE2
  2160                           fsr1l	equ	0xFE1
  2161                           bsr	equ	0xFE0
  2162                           indf2	equ	0xFDF
  2163                           fsr2h	equ	0xFDA
  2164                           fsr2l	equ	0xFD9
  2165                           status	equ	0xFD8
  2166                           
  2167 ;; *************** function _initRS485 *****************
  2168 ;; Defined at:
  2169 ;;		line 21 in file "rs485.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;		None               void
  2176 ;; Registers used:
  2177 ;;		wreg, status,2
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1
  2183 ;;      Params:         0       0       0
  2184 ;;      Locals:         0       0       0
  2185 ;;      Temps:          0       0       0
  2186 ;;      Totals:         0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    3
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text13
  2198  000AAC                     __ptext13:
  2199                           	opt stack 0
  2200  000AAC                     _initRS485:
  2201                           	opt stack 27
  2202                           
  2203                           ;rs485.c: 25: BAUDCONbits.BRG16 = 0;
  2204                           
  2205                           ;incstack = 0
  2206  000AAC  96B8               	bcf	4024,3,c	;volatile
  2207                           
  2208                           ;rs485.c: 26: BAUDCONbits.CKTXP = 1;
  2209  000AAE  88B8               	bsf	4024,4,c	;volatile
  2210                           
  2211                           ;rs485.c: 28: SPBRG1 = 3;
  2212  000AB0  0E03               	movlw	3
  2213  000AB2  6EAF               	movwf	4015,c	;volatile
  2214                           
  2215                           ;rs485.c: 29: SPBRGH = 0;
  2216  000AB4  0E00               	movlw	0
  2217  000AB6  6EB0               	movwf	4016,c	;volatile
  2218                           
  2219                           ;rs485.c: 31: RCSTA1bits.CREN = 1;
  2220  000AB8  88AB               	bsf	4011,4,c	;volatile
  2221                           
  2222                           ;rs485.c: 33: RCSTA1bits.SPEN = 1;
  2223  000ABA  8EAB               	bsf	4011,7,c	;volatile
  2224                           
  2225                           ;rs485.c: 35: PIE1bits.RCIE = 1;
  2226  000ABC  8A9D               	bsf	3997,5,c	;volatile
  2227                           
  2228                           ;rs485.c: 36: IPR1bits.RCIP = 1;
  2229  000ABE  8A9F               	bsf	3999,5,c	;volatile
  2230  000AC0  0012               	return	
  2231  000AC2                     __end_of_initRS485:
  2232                           	opt stack 0
  2233                           pclatu	equ	0xFFB
  2234                           pclath	equ	0xFFA
  2235                           tblptru	equ	0xFF8
  2236                           tblptrh	equ	0xFF7
  2237                           tblptrl	equ	0xFF6
  2238                           tablat	equ	0xFF5
  2239                           prodh	equ	0xFF4
  2240                           prodl	equ	0xFF3
  2241                           intcon	equ	0xFF2
  2242                           postinc0	equ	0xFEE
  2243                           fsr0h	equ	0xFEA
  2244                           fsr0l	equ	0xFE9
  2245                           wreg	equ	0xFE8
  2246                           fsr1h	equ	0xFE2
  2247                           fsr1l	equ	0xFE1
  2248                           bsr	equ	0xFE0
  2249                           indf2	equ	0xFDF
  2250                           fsr2h	equ	0xFDA
  2251                           fsr2l	equ	0xFD9
  2252                           status	equ	0xFD8
  2253                           
  2254 ;; *************** function _initProtocol *****************
  2255 ;; Defined at:
  2256 ;;		line 17 in file "protocol.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;		None               void
  2263 ;; Registers used:
  2264 ;;		wreg, status,2
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1
  2270 ;;      Params:         0       0       0
  2271 ;;      Locals:         0       0       0
  2272 ;;      Temps:          0       0       0
  2273 ;;      Totals:         0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    3
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text14
  2285  000ACE                     __ptext14:
  2286                           	opt stack 0
  2287  000ACE                     _initProtocol:
  2288                           	opt stack 27
  2289                           
  2290                           ;protocol.c: 19: protocolState = 0;
  2291                           
  2292                           ;incstack = 0
  2293  000ACE  0E00               	movlw	0
  2294  000AD0  6E51               	movwf	_protocolState,c
  2295  000AD2  0012               	return	
  2296  000AD4                     __end_of_initProtocol:
  2297                           	opt stack 0
  2298                           pclatu	equ	0xFFB
  2299                           pclath	equ	0xFFA
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           prodh	equ	0xFF4
  2305                           prodl	equ	0xFF3
  2306                           intcon	equ	0xFF2
  2307                           postinc0	equ	0xFEE
  2308                           fsr0h	equ	0xFEA
  2309                           fsr0l	equ	0xFE9
  2310                           wreg	equ	0xFE8
  2311                           fsr1h	equ	0xFE2
  2312                           fsr1l	equ	0xFE1
  2313                           bsr	equ	0xFE0
  2314                           indf2	equ	0xFDF
  2315                           fsr2h	equ	0xFDA
  2316                           fsr2l	equ	0xFD9
  2317                           status	equ	0xFD8
  2318                           
  2319 ;; *************** function _initHardware *****************
  2320 ;; Defined at:
  2321 ;;		line 6 in file "hardware.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;		None               void
  2328 ;; Registers used:
  2329 ;;		wreg, status,2
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1
  2335 ;;      Params:         0       0       0
  2336 ;;      Locals:         0       0       0
  2337 ;;      Temps:          0       0       0
  2338 ;;      Totals:         0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    3
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_main
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text15
  2350  000830                     __ptext15:
  2351                           	opt stack 0
  2352  000830                     _initHardware:
  2353                           	opt stack 27
  2354                           
  2355                           ;hardware.c: 10: OSCCONbits.IDLEN = 0;
  2356                           
  2357                           ;incstack = 0
  2358  000830  9ED3               	bcf	4051,7,c	;volatile
  2359                           
  2360                           ;hardware.c: 12: OSCCONbits.IRCF2 = 1;
  2361  000832  8CD3               	bsf	4051,6,c	;volatile
  2362                           
  2363                           ;hardware.c: 13: OSCCONbits.IRCF1 = 1;
  2364  000834  8AD3               	bsf	4051,5,c	;volatile
  2365                           
  2366                           ;hardware.c: 14: OSCCONbits.IRCF0 = 0;
  2367  000836  98D3               	bcf	4051,4,c	;volatile
  2368                           
  2369                           ;hardware.c: 16: OSCCONbits.SCS1 = 1;
  2370  000838  82D3               	bsf	4051,1,c	;volatile
  2371                           
  2372                           ;hardware.c: 17: OSCCONbits.SCS0 = 0;
  2373  00083A  90D3               	bcf	4051,0,c	;volatile
  2374                           
  2375                           ;hardware.c: 23: CM1CON0 = 0;
  2376  00083C  0E00               	movlw	0
  2377  00083E  6E6D               	movwf	3949,c	;volatile
  2378                           
  2379                           ;hardware.c: 24: CM2CON0 = 0;
  2380  000840  0E00               	movlw	0
  2381  000842  6E6B               	movwf	3947,c	;volatile
  2382                           
  2383                           ;hardware.c: 27: ANSEL = 0x00;
  2384  000844  0E00               	movlw	0
  2385  000846  6E7E               	movwf	3966,c	;volatile
  2386                           
  2387                           ;hardware.c: 28: ANSELH = 0x00;
  2388  000848  0E00               	movlw	0
  2389  00084A  6E7F               	movwf	3967,c	;volatile
  2390                           
  2391                           ;hardware.c: 30: LATA = 0x00;
  2392  00084C  0E00               	movlw	0
  2393  00084E  6E89               	movwf	3977,c	;volatile
  2394                           
  2395                           ;hardware.c: 31: PORTA = 0x00;
  2396  000850  0E00               	movlw	0
  2397  000852  6E80               	movwf	3968,c	;volatile
  2398                           
  2399                           ;hardware.c: 32: TRISA = 0b00000111;
  2400  000854  0E07               	movlw	7
  2401  000856  6E92               	movwf	3986,c	;volatile
  2402                           
  2403                           ;hardware.c: 43: PORTB = 0x00;
  2404  000858  0E00               	movlw	0
  2405  00085A  6E81               	movwf	3969,c	;volatile
  2406                           
  2407                           ;hardware.c: 44: LATB = 0x00;
  2408  00085C  0E00               	movlw	0
  2409  00085E  6E8A               	movwf	3978,c	;volatile
  2410                           
  2411                           ;hardware.c: 46: TRISB = 0b00111111;
  2412  000860  0E3F               	movlw	63
  2413  000862  6E93               	movwf	3987,c	;volatile
  2414                           
  2415                           ;hardware.c: 48: LATC = 0x00;
  2416  000864  0E00               	movlw	0
  2417  000866  6E8B               	movwf	3979,c	;volatile
  2418                           
  2419                           ;hardware.c: 49: PORTC = 0x00;
  2420  000868  0E00               	movlw	0
  2421  00086A  6E82               	movwf	3970,c	;volatile
  2422                           
  2423                           ;hardware.c: 51: TRISC = 0b00110111;
  2424  00086C  0E37               	movlw	55
  2425  00086E  6E94               	movwf	3988,c	;volatile
  2426  000870  0012               	return	
  2427  000872                     __end_of_initHardware:
  2428                           	opt stack 0
  2429                           pclatu	equ	0xFFB
  2430                           pclath	equ	0xFFA
  2431                           tblptru	equ	0xFF8
  2432                           tblptrh	equ	0xFF7
  2433                           tblptrl	equ	0xFF6
  2434                           tablat	equ	0xFF5
  2435                           prodh	equ	0xFF4
  2436                           prodl	equ	0xFF3
  2437                           intcon	equ	0xFF2
  2438                           postinc0	equ	0xFEE
  2439                           fsr0h	equ	0xFEA
  2440                           fsr0l	equ	0xFE9
  2441                           wreg	equ	0xFE8
  2442                           fsr1h	equ	0xFE2
  2443                           fsr1l	equ	0xFE1
  2444                           bsr	equ	0xFE0
  2445                           indf2	equ	0xFDF
  2446                           fsr2h	equ	0xFDA
  2447                           fsr2l	equ	0xFD9
  2448                           status	equ	0xFD8
  2449                           
  2450 ;; *************** function _initButtonTimer *****************
  2451 ;; Defined at:
  2452 ;;		line 31 in file "buttons.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;		None               void
  2459 ;; Registers used:
  2460 ;;		wreg, status,2
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1
  2466 ;;      Params:         0       0       0
  2467 ;;      Locals:         0       0       0
  2468 ;;      Temps:          0       0       0
  2469 ;;      Totals:         0       0       0
  2470 ;;Total ram usage:        0 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    3
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text16
  2481  000960                     __ptext16:
  2482                           	opt stack 0
  2483  000960                     _initButtonTimer:
  2484                           	opt stack 27
  2485                           
  2486                           ;buttons.c: 33: T0CONbits.TMR0ON = 0;
  2487                           
  2488                           ;incstack = 0
  2489  000960  9ED5               	bcf	4053,7,c	;volatile
  2490                           
  2491                           ;buttons.c: 35: TMR0H = 0;
  2492  000962  0E00               	movlw	0
  2493  000964  6ED7               	movwf	4055,c	;volatile
  2494                           
  2495                           ;buttons.c: 36: TMR0L = 0;
  2496  000966  0E00               	movlw	0
  2497  000968  6ED6               	movwf	4054,c	;volatile
  2498                           
  2499                           ;buttons.c: 37: INTCONbits.TMR0IF = 0;
  2500  00096A  94F2               	bcf	intcon,2,c	;volatile
  2501                           
  2502                           ;buttons.c: 39: T0CONbits.T08BIT = 0;
  2503  00096C  9CD5               	bcf	4053,6,c	;volatile
  2504                           
  2505                           ;buttons.c: 40: T0CONbits.T0CS = 0;
  2506  00096E  9AD5               	bcf	4053,5,c	;volatile
  2507                           
  2508                           ;buttons.c: 41: T0CONbits.PSA = 0;
  2509  000970  96D5               	bcf	4053,3,c	;volatile
  2510                           
  2511                           ;buttons.c: 43: T0CONbits.T0PS = 0;
  2512  000972  90D5               	bcf	4053,0,c	;volatile
  2513  000974  92D5               	bcf	4053,1,c	;volatile
  2514  000976  94D5               	bcf	4053,2,c	;volatile
  2515                           
  2516                           ;buttons.c: 48: RCONbits.IPEN = 1;
  2517  000978  8ED0               	bsf	4048,7,c	;volatile
  2518                           
  2519                           ;buttons.c: 49: INTCONbits.PEIE = 1;
  2520  00097A  8CF2               	bsf	intcon,6,c	;volatile
  2521                           
  2522                           ;buttons.c: 50: INTCON2bits.TMR0IP = 0;
  2523  00097C  94F1               	bcf	intcon2,2,c	;volatile
  2524                           
  2525                           ;buttons.c: 51: INTCONbits.TMR0IE = 1;
  2526  00097E  8AF2               	bsf	intcon,5,c	;volatile
  2527                           
  2528                           ;buttons.c: 57: T0CONbits.TMR0ON = 1;
  2529  000980  8ED5               	bsf	4053,7,c	;volatile
  2530  000982  0012               	return	
  2531  000984                     __end_of_initButtonTimer:
  2532                           	opt stack 0
  2533                           pclatu	equ	0xFFB
  2534                           pclath	equ	0xFFA
  2535                           tblptru	equ	0xFF8
  2536                           tblptrh	equ	0xFF7
  2537                           tblptrl	equ	0xFF6
  2538                           tablat	equ	0xFF5
  2539                           prodh	equ	0xFF4
  2540                           prodl	equ	0xFF3
  2541                           intcon	equ	0xFF2
  2542                           intcon2	equ	0xFF1
  2543                           postinc0	equ	0xFEE
  2544                           fsr0h	equ	0xFEA
  2545                           fsr0l	equ	0xFE9
  2546                           wreg	equ	0xFE8
  2547                           fsr1h	equ	0xFE2
  2548                           fsr1l	equ	0xFE1
  2549                           bsr	equ	0xFE0
  2550                           indf2	equ	0xFDF
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8
  2554                           
  2555 ;; *************** function _initButton *****************
  2556 ;; Defined at:
  2557 ;;		line 80 in file "buttons.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  i               1    wreg     unsigned char 
  2560 ;;  bn              1   35[COMRAM] unsigned char 
  2561 ;;  bf              1   36[COMRAM] unsigned char 
  2562 ;;  risingEdge      2   37[COMRAM] PTR FTN(unsigned char ,)
  2563 ;;		 -> buttonDownPressed(0), buttonUpPressed(0), 
  2564 ;;  fallingEdge     2   39[COMRAM] PTR FTN(unsigned char ,)
  2565 ;;		 -> buttonDownReleased(0), buttonUpReleased(0), 
  2566 ;;  state           2   41[COMRAM] PTR FTN(unsigned char ,)
  2567 ;;		 -> Absolute function(0), 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  i               1   43[COMRAM] unsigned char 
  2570 ;;  bp              2   44[COMRAM] PTR struct button
  2571 ;;		 -> buttons(120), 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;		None               void
  2574 ;; Registers used:
  2575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1
  2581 ;;      Params:         8       0       0
  2582 ;;      Locals:         3       0       0
  2583 ;;      Temps:          0       0       0
  2584 ;;      Totals:        11       0       0
  2585 ;;Total ram usage:       11 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    3
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text17
  2596  000456                     __ptext17:
  2597                           	opt stack 0
  2598  000456                     _initButton:
  2599                           	opt stack 27
  2600                           
  2601                           ;incstack = 0
  2602                           ;initButton@i stored from wreg
  2603  000456  6E2C               	movwf	initButton@i,c
  2604                           
  2605                           ;buttons.c: 82: BUTTON *bp = &buttons[i];
  2606  000458  502C               	movf	initButton@i,w,c
  2607  00045A  0D0A               	mullw	10
  2608  00045C  0100               	movlb	0	; () banked
  2609  00045E  0E80               	movlw	low _buttons
  2610  000460  24F3               	addwf	prodl,w,c
  2611  000462  6E2D               	movwf	initButton@bp,c
  2612  000464  0100               	movlb	0	; () banked
  2613  000466  0E00               	movlw	high _buttons
  2614  000468  20F4               	addwfc	prodh,w,c
  2615  00046A  6E2E               	movwf	initButton@bp+1,c
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;buttons.c: 84: bp -> buttonNumber = bn;
  2619  00046C  C02D  FFD9         	movff	initButton@bp,fsr2l
  2620  000470  C02E  FFDA         	movff	initButton@bp+1,fsr2h
  2621  000474  C024  FFDF         	movff	initButton@bn,indf2
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;buttons.c: 85: bp -> buttonFunction = bf;
  2625  000478  EE20 F001          	lfsr	2,1
  2626  00047C  502D               	movf	initButton@bp,w,c
  2627  00047E  26D9               	addwf	fsr2l,f,c
  2628  000480  502E               	movf	initButton@bp+1,w,c
  2629  000482  22DA               	addwfc	fsr2h,f,c
  2630  000484  C025  FFDF         	movff	initButton@bf,indf2
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;buttons.c: 87: bp -> isActive = 0;
  2634  000488  EE20 F002          	lfsr	2,2
  2635  00048C  502D               	movf	initButton@bp,w,c
  2636  00048E  26D9               	addwf	fsr2l,f,c
  2637  000490  502E               	movf	initButton@bp+1,w,c
  2638  000492  22DA               	addwfc	fsr2h,f,c
  2639  000494  0E00               	movlw	0
  2640  000496  6EDF               	movwf	indf2,c
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;buttons.c: 88: bp -> watchdog = 0;
  2644  000498  EE20 F003          	lfsr	2,3
  2645  00049C  502D               	movf	initButton@bp,w,c
  2646  00049E  26D9               	addwf	fsr2l,f,c
  2647  0004A0  502E               	movf	initButton@bp+1,w,c
  2648  0004A2  22DA               	addwfc	fsr2h,f,c
  2649  0004A4  0E00               	movlw	0
  2650  0004A6  6EDF               	movwf	indf2,c
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;buttons.c: 90: bp -> risingEdge = risingEdge;
  2654  0004A8  EE20 F004          	lfsr	2,4
  2655  0004AC  502D               	movf	initButton@bp,w,c
  2656  0004AE  26D9               	addwf	fsr2l,f,c
  2657  0004B0  502E               	movf	initButton@bp+1,w,c
  2658  0004B2  22DA               	addwfc	fsr2h,f,c
  2659  0004B4  C026  FFDE         	movff	initButton@risingEdge,postinc2
  2660  0004B8  C027  FFDD         	movff	initButton@risingEdge+1,postdec2
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;buttons.c: 91: bp -> fallingEdge = fallingEdge;
  2664  0004BC  EE20 F006          	lfsr	2,6
  2665  0004C0  502D               	movf	initButton@bp,w,c
  2666  0004C2  26D9               	addwf	fsr2l,f,c
  2667  0004C4  502E               	movf	initButton@bp+1,w,c
  2668  0004C6  22DA               	addwfc	fsr2h,f,c
  2669  0004C8  C028  FFDE         	movff	initButton@fallingEdge,postinc2
  2670  0004CC  C029  FFDD         	movff	initButton@fallingEdge+1,postdec2
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;buttons.c: 92: bp -> state = state;
  2674  0004D0  EE20 F008          	lfsr	2,8
  2675  0004D4  502D               	movf	initButton@bp,w,c
  2676  0004D6  26D9               	addwf	fsr2l,f,c
  2677  0004D8  502E               	movf	initButton@bp+1,w,c
  2678  0004DA  22DA               	addwfc	fsr2h,f,c
  2679  0004DC  C02A  FFDE         	movff	initButton@state,postinc2
  2680  0004E0  C02B  FFDD         	movff	initButton@state+1,postdec2
  2681                           
  2682                           ; BSR set to: 0
  2683  0004E4  0012               	return	
  2684  0004E6                     __end_of_initButton:
  2685                           	opt stack 0
  2686                           pclatu	equ	0xFFB
  2687                           pclath	equ	0xFFA
  2688                           tblptru	equ	0xFF8
  2689                           tblptrh	equ	0xFF7
  2690                           tblptrl	equ	0xFF6
  2691                           tablat	equ	0xFF5
  2692                           prodh	equ	0xFF4
  2693                           prodl	equ	0xFF3
  2694                           intcon	equ	0xFF2
  2695                           intcon2	equ	0xFF1
  2696                           postinc0	equ	0xFEE
  2697                           fsr0h	equ	0xFEA
  2698                           fsr0l	equ	0xFE9
  2699                           wreg	equ	0xFE8
  2700                           fsr1h	equ	0xFE2
  2701                           fsr1l	equ	0xFE1
  2702                           bsr	equ	0xFE0
  2703                           indf2	equ	0xFDF
  2704                           postinc2	equ	0xFDE
  2705                           postdec2	equ	0xFDD
  2706                           fsr2h	equ	0xFDA
  2707                           fsr2l	equ	0xFD9
  2708                           status	equ	0xFD8
  2709                           
  2710 ;; *************** function _fifoGet *****************
  2711 ;; Defined at:
  2712 ;;		line 40 in file "fifo.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  v               1   37[COMRAM] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      unsigned char 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1
  2726 ;;      Params:         0       0       0
  2727 ;;      Locals:         1       0       0
  2728 ;;      Temps:          2       0       0
  2729 ;;      Totals:         3       0       0
  2730 ;;Total ram usage:        3 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    3
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_main
  2737 ;;		_sendRS485
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text18
  2742  0008E2                     __ptext18:
  2743                           	opt stack 0
  2744  0008E2                     _fifoGet:
  2745                           	opt stack 27
  2746                           
  2747                           ;fifo.c: 42: unsigned char v = fifo[fifoOut];
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;incstack = 0
  2751  0008E2  5050               	movf	_fifoOut,w,c
  2752  0008E4  0D01               	mullw	1
  2753  0008E6  0E37               	movlw	low _fifo
  2754  0008E8  24F3               	addwf	prodl,w,c
  2755  0008EA  6ED9               	movwf	fsr2l,c
  2756  0008EC  0E00               	movlw	high _fifo
  2757  0008EE  20F4               	addwfc	prodh,w,c
  2758  0008F0  6EDA               	movwf	fsr2h,c
  2759  0008F2  50DF               	movf	indf2,w,c
  2760  0008F4  6E26               	movwf	fifoGet@v,c
  2761                           
  2762                           ;fifo.c: 45: return fifo[fifoOut++ & 0x0F];
  2763  0008F6  2A50               	incf	_fifoOut,f,c
  2764  0008F8  0450               	decf	_fifoOut,w,c
  2765  0008FA  0B0F               	andlw	15
  2766  0008FC  6E24               	movwf	??_fifoGet& (0+255),c
  2767  0008FE  6A25               	clrf	(??_fifoGet+1)& (0+255),c
  2768  000900  0E37               	movlw	low _fifo
  2769  000902  2424               	addwf	??_fifoGet,w,c
  2770  000904  6ED9               	movwf	fsr2l,c
  2771  000906  0E00               	movlw	high _fifo
  2772  000908  2025               	addwfc	??_fifoGet+1,w,c
  2773  00090A  6EDA               	movwf	fsr2h,c
  2774  00090C  50DF               	movf	indf2,w,c
  2775  00090E  0012               	return	
  2776  000910                     __end_of_fifoGet:
  2777                           	opt stack 0
  2778                           pclatu	equ	0xFFB
  2779                           pclath	equ	0xFFA
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           prodh	equ	0xFF4
  2785                           prodl	equ	0xFF3
  2786                           intcon	equ	0xFF2
  2787                           intcon2	equ	0xFF1
  2788                           postinc0	equ	0xFEE
  2789                           fsr0h	equ	0xFEA
  2790                           fsr0l	equ	0xFE9
  2791                           wreg	equ	0xFE8
  2792                           fsr1h	equ	0xFE2
  2793                           fsr1l	equ	0xFE1
  2794                           bsr	equ	0xFE0
  2795                           indf2	equ	0xFDF
  2796                           postinc2	equ	0xFDE
  2797                           postdec2	equ	0xFDD
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _fifoEmpty *****************
  2803 ;; Defined at:
  2804 ;;		line 65 in file "fifo.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      unsigned char 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1
  2818 ;;      Params:         0       0       0
  2819 ;;      Locals:         0       0       0
  2820 ;;      Temps:          1       0       0
  2821 ;;      Totals:         1       0       0
  2822 ;;Total ram usage:        1 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    3
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;;		_sendRS485
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text19
  2834  000A92                     __ptext19:
  2835                           	opt stack 0
  2836  000A92                     _fifoEmpty:
  2837                           	opt stack 27
  2838                           
  2839                           ;fifo.c: 67: return (fifoIn & 0x0F) == (fifoOut & 0x0F);
  2840                           
  2841                           ;incstack = 0
  2842  000A92  C050  F024         	movff	_fifoOut,??_fifoEmpty
  2843  000A96  0E0F               	movlw	15
  2844  000A98  1624               	andwf	??_fifoEmpty,f,c
  2845  000A9A  504F               	movf	_fifoIn,w,c
  2846  000A9C  0B0F               	andlw	15
  2847  000A9E  1824               	xorwf	??_fifoEmpty,w,c
  2848  000AA0  A4D8               	btfss	status,2,c
  2849  000AA2  D002               	goto	u230
  2850  000AA4  0E01               	movlw	1
  2851  000AA6  0012               	return	
  2852  000AA8                     u230:
  2853  000AA8  0E00               	movlw	0
  2854  000AAA  0012               	return	
  2855  000AAC                     __end_of_fifoEmpty:
  2856                           	opt stack 0
  2857                           pclatu	equ	0xFFB
  2858                           pclath	equ	0xFFA
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           intcon	equ	0xFF2
  2866                           intcon2	equ	0xFF1
  2867                           postinc0	equ	0xFEE
  2868                           fsr0h	equ	0xFEA
  2869                           fsr0l	equ	0xFE9
  2870                           wreg	equ	0xFE8
  2871                           fsr1h	equ	0xFE2
  2872                           fsr1l	equ	0xFE1
  2873                           bsr	equ	0xFE0
  2874                           indf2	equ	0xFDF
  2875                           postinc2	equ	0xFDE
  2876                           postdec2	equ	0xFDD
  2877                           fsr2h	equ	0xFDA
  2878                           fsr2l	equ	0xFD9
  2879                           status	equ	0xFD8
  2880                           
  2881 ;; *************** function _byteReceived *****************
  2882 ;; Defined at:
  2883 ;;		line 26 in file "protocol.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  b               1    wreg     unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  b               1   50[COMRAM] unsigned char 
  2888 ;;  code            1   49[COMRAM] unsigned char 
  2889 ;;  checksum        1   48[COMRAM] unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;		None               void
  2892 ;; Registers used:
  2893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1
  2899 ;;      Params:         0       0       0
  2900 ;;      Locals:         3       0       0
  2901 ;;      Temps:          1       0       0
  2902 ;;      Totals:         4       0       0
  2903 ;;Total ram usage:        4 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    7
  2906 ;; This function calls:
  2907 ;;		_decodeButton
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text20
  2914  00072E                     __ptext20:
  2915                           	opt stack 0
  2916  00072E                     _byteReceived:
  2917                           	opt stack 23
  2918                           
  2919                           ;incstack = 0
  2920                           ;byteReceived@b stored from wreg
  2921  00072E  6E33               	movwf	byteReceived@b,c
  2922                           
  2923                           ;protocol.c: 29: unsigned char checksum;
  2924                           ;protocol.c: 30: unsigned char code;
  2925                           ;protocol.c: 38: if (protocolState == 0 && b == 0xF1 ) {
  2926  000730  6651               	tstfsz	_protocolState,c
  2927  000732  D007               	goto	l1281
  2928  000734  5033               	movf	byteReceived@b,w,c
  2929  000736  0AF1               	xorlw	241
  2930  000738  A4D8               	btfss	status,2,c
  2931  00073A  D003               	goto	l1281
  2932                           
  2933                           ;protocol.c: 39: protocolState = 1;
  2934  00073C  0E01               	movlw	1
  2935  00073E  6E51               	movwf	_protocolState,c
  2936  000740  0012               	return	
  2937  000742                     l1281:
  2938                           
  2939                           ;protocol.c: 41: }
  2940                           ;protocol.c: 43: if ( protocolState == 1 ) {
  2941  000742  0451               	decf	_protocolState,w,c
  2942  000744  A4D8               	btfss	status,2,c
  2943  000746  D00A               	goto	l1289
  2944                           
  2945                           ;protocol.c: 45: device = (b >> 4) & 0x0F;
  2946  000748  3833               	swapf	byteReceived@b,w,c
  2947  00074A  0B0F               	andlw	15
  2948  00074C  0B0F               	andlw	15
  2949  00074E  6E4D               	movwf	_device,c
  2950                           
  2951                           ;protocol.c: 46: button = b & 0x0F;
  2952  000750  5033               	movf	byteReceived@b,w,c
  2953  000752  0B0F               	andlw	15
  2954  000754  6E4B               	movwf	_button,c
  2955                           
  2956                           ;protocol.c: 47: protocolState = 2;
  2957  000756  0E02               	movlw	2
  2958  000758  6E51               	movwf	_protocolState,c
  2959  00075A  0012               	return	
  2960  00075C                     l1289:
  2961                           
  2962                           ;protocol.c: 49: }
  2963                           ;protocol.c: 51: if ( protocolState == 2 ) {
  2964  00075C  5051               	movf	_protocolState,w,c
  2965  00075E  0A02               	xorlw	2
  2966  000760  A4D8               	btfss	status,2,c
  2967  000762  D012               	goto	l1297
  2968                           
  2969                           ;protocol.c: 53: code = ((device << 4) & 0xF0) | (button & 0x0F);
  2970  000764  C04B  F030         	movff	_button,??_byteReceived
  2971  000768  0E0F               	movlw	15
  2972  00076A  1630               	andwf	??_byteReceived,f,c
  2973  00076C  384D               	swapf	_device,w,c
  2974  00076E  0BF0               	andlw	240
  2975  000770  0BF0               	andlw	240
  2976  000772  1030               	iorwf	??_byteReceived,w,c
  2977  000774  6E32               	movwf	byteReceived@code,c
  2978                           
  2979                           ;protocol.c: 54: checksum = 0xF1 ^ code ;
  2980  000776  5032               	movf	byteReceived@code,w,c
  2981  000778  0AF1               	xorlw	241
  2982  00077A  6E31               	movwf	byteReceived@checksum,c
  2983                           
  2984                           ;protocol.c: 56: if ( checksum == b) {
  2985  00077C  5033               	movf	byteReceived@b,w,c
  2986  00077E  6231               	cpfseq	byteReceived@checksum,c
  2987  000780  D003               	goto	l1297
  2988                           
  2989                           ;protocol.c: 58: decodeButton(code);
  2990  000782  5032               	movf	byteReceived@code,w,c
  2991  000784  ECF3  F004         	call	_decodeButton
  2992  000788                     l1297:
  2993                           
  2994                           ;protocol.c: 60: }
  2995                           ;protocol.c: 61: }
  2996                           ;protocol.c: 63: protocolState = 0;
  2997  000788  0E00               	movlw	0
  2998  00078A  6E51               	movwf	_protocolState,c
  2999  00078C  0012               	return	
  3000  00078E                     __end_of_byteReceived:
  3001                           	opt stack 0
  3002                           pclatu	equ	0xFFB
  3003                           pclath	equ	0xFFA
  3004                           tblptru	equ	0xFF8
  3005                           tblptrh	equ	0xFF7
  3006                           tblptrl	equ	0xFF6
  3007                           tablat	equ	0xFF5
  3008                           prodh	equ	0xFF4
  3009                           prodl	equ	0xFF3
  3010                           intcon	equ	0xFF2
  3011                           intcon2	equ	0xFF1
  3012                           postinc0	equ	0xFEE
  3013                           fsr0h	equ	0xFEA
  3014                           fsr0l	equ	0xFE9
  3015                           wreg	equ	0xFE8
  3016                           fsr1h	equ	0xFE2
  3017                           fsr1l	equ	0xFE1
  3018                           bsr	equ	0xFE0
  3019                           indf2	equ	0xFDF
  3020                           postinc2	equ	0xFDE
  3021                           postdec2	equ	0xFDD
  3022                           fsr2h	equ	0xFDA
  3023                           fsr2l	equ	0xFD9
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _decodeButton *****************
  3027 ;; Defined at:
  3028 ;;		line 119 in file "buttons.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  code            1    wreg     unsigned char 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  code            1   46[COMRAM] unsigned char 
  3033 ;;  bp              2   44[COMRAM] PTR struct button
  3034 ;;		 -> NULL(0), buttons(120), 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1
  3044 ;;      Params:         0       0       0
  3045 ;;      Locals:         3       0       0
  3046 ;;      Temps:          0       0       0
  3047 ;;      Totals:         3       0       0
  3048 ;;Total ram usage:        3 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    6
  3051 ;; This function calls:
  3052 ;;		_buttonReceived
  3053 ;;		_findButton
  3054 ;; This function is called by:
  3055 ;;		_byteReceived
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text21
  3060  0009E6                     __ptext21:
  3061                           	opt stack 0
  3062  0009E6                     _decodeButton:
  3063                           	opt stack 23
  3064                           
  3065                           ;incstack = 0
  3066                           ;decodeButton@code stored from wreg
  3067  0009E6  6E2F               	movwf	decodeButton@code,c
  3068                           
  3069                           ;buttons.c: 121: BUTTON *bp = findButton((BUTTONNUMBER)code);
  3070  0009E8  502F               	movf	decodeButton@code,w,c
  3071  0009EA  ECF3  F003         	call	_findButton
  3072  0009EE  C024  F02D         	movff	?_findButton,decodeButton@bp
  3073  0009F2  C025  F02E         	movff	?_findButton+1,decodeButton@bp+1
  3074                           
  3075                           ;buttons.c: 122: buttonReceived(bp);
  3076  0009F6  C02E  F02C         	movff	decodeButton@bp+1,buttonReceived@bp+1
  3077  0009FA  C02D  F02B         	movff	decodeButton@bp,buttonReceived@bp
  3078  0009FE  EC73  F002         	call	_buttonReceived	;wreg free
  3079  000A02  0012               	return	
  3080  000A04                     __end_of_decodeButton:
  3081                           	opt stack 0
  3082                           pclatu	equ	0xFFB
  3083                           pclath	equ	0xFFA
  3084                           tblptru	equ	0xFF8
  3085                           tblptrh	equ	0xFF7
  3086                           tblptrl	equ	0xFF6
  3087                           tablat	equ	0xFF5
  3088                           prodh	equ	0xFF4
  3089                           prodl	equ	0xFF3
  3090                           intcon	equ	0xFF2
  3091                           intcon2	equ	0xFF1
  3092                           postinc0	equ	0xFEE
  3093                           fsr0h	equ	0xFEA
  3094                           fsr0l	equ	0xFE9
  3095                           wreg	equ	0xFE8
  3096                           fsr1h	equ	0xFE2
  3097                           fsr1l	equ	0xFE1
  3098                           bsr	equ	0xFE0
  3099                           indf2	equ	0xFDF
  3100                           postinc2	equ	0xFDE
  3101                           postdec2	equ	0xFDD
  3102                           fsr2h	equ	0xFDA
  3103                           fsr2l	equ	0xFD9
  3104                           status	equ	0xFD8
  3105                           
  3106 ;; *************** function _findButton *****************
  3107 ;; Defined at:
  3108 ;;		line 65 in file "buttons.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  code            1    wreg     unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  code            1   37[COMRAM] unsigned char 
  3113 ;;  i               1   38[COMRAM] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  2   35[COMRAM] PTR struct button
  3116 ;; Registers used:
  3117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1
  3123 ;;      Params:         2       0       0
  3124 ;;      Locals:         2       0       0
  3125 ;;      Temps:          0       0       0
  3126 ;;      Totals:         4       0       0
  3127 ;;Total ram usage:        4 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    3
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_decodeButton
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text22
  3138  0007E6                     __ptext22:
  3139                           	opt stack 0
  3140  0007E6                     _findButton:
  3141                           	opt stack 25
  3142                           
  3143                           ;incstack = 0
  3144                           ;findButton@code stored from wreg
  3145  0007E6  6E26               	movwf	findButton@code,c
  3146                           
  3147                           ;buttons.c: 67: BUTTONINDEX i;
  3148                           ;buttons.c: 69: for ( i = 0; i < 12; i++) {
  3149  0007E8  0E00               	movlw	0
  3150  0007EA  6E27               	movwf	findButton@i,c
  3151  0007EC  D019               	goto	L1
  3152  0007EE                     l1051:
  3153                           
  3154                           ;buttons.c: 71: if ( buttons[i].buttonNumber == code)
  3155  0007EE  5027               	movf	findButton@i,w,c
  3156  0007F0  0D0A               	mullw	10
  3157  0007F2  0100               	movlb	0	; () banked
  3158  0007F4  0E80               	movlw	low _buttons
  3159  0007F6  24F3               	addwf	prodl,w,c
  3160  0007F8  6ED9               	movwf	fsr2l,c
  3161  0007FA  0100               	movlb	0	; () banked
  3162  0007FC  0E00               	movlw	high _buttons
  3163  0007FE  20F4               	addwfc	prodh,w,c
  3164  000800  6EDA               	movwf	fsr2h,c
  3165  000802  5026               	movf	findButton@code,w,c
  3166  000804  62DF               	cpfseq	indf2,c
  3167  000806  D00B               	goto	l1057
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;buttons.c: 72: return &buttons[i];
  3171  000808  5027               	movf	findButton@i,w,c
  3172  00080A  0D0A               	mullw	10
  3173  00080C  0100               	movlb	0	; () banked
  3174  00080E  0E80               	movlw	low _buttons
  3175  000810  24F3               	addwf	prodl,w,c
  3176  000812  6E24               	movwf	?_findButton,c
  3177  000814  0100               	movlb	0	; () banked
  3178  000816  0E00               	movlw	high _buttons
  3179  000818  20F4               	addwfc	prodh,w,c
  3180  00081A  6E25               	movwf	?_findButton+1,c
  3181  00081C  0012               	return	
  3182  00081E                     l1057:
  3183                           
  3184                           ; BSR set to: 0
  3185  00081E  2A27               	incf	findButton@i,f,c
  3186  000820                     L1:
  3187                           
  3188                           ; BSR set to: 0
  3189  000820  0E0B               	movlw	11
  3190  000822  6427               	cpfsgt	findButton@i,c
  3191  000824  D7E4               	goto	l1051
  3192                           
  3193                           ;buttons.c: 73: }
  3194                           ;buttons.c: 74: return (BUTTON*) 0;
  3195                           
  3196                           ; BSR set to: 0
  3197  000826  0E00               	movlw	0
  3198  000828  6E25               	movwf	?_findButton+1,c
  3199  00082A  0E00               	movlw	0
  3200  00082C  6E24               	movwf	?_findButton,c
  3201  00082E  0012               	return	
  3202  000830                     __end_of_findButton:
  3203                           	opt stack 0
  3204                           pclatu	equ	0xFFB
  3205                           pclath	equ	0xFFA
  3206                           tblptru	equ	0xFF8
  3207                           tblptrh	equ	0xFF7
  3208                           tblptrl	equ	0xFF6
  3209                           tablat	equ	0xFF5
  3210                           prodh	equ	0xFF4
  3211                           prodl	equ	0xFF3
  3212                           intcon	equ	0xFF2
  3213                           intcon2	equ	0xFF1
  3214                           postinc0	equ	0xFEE
  3215                           fsr0h	equ	0xFEA
  3216                           fsr0l	equ	0xFE9
  3217                           wreg	equ	0xFE8
  3218                           fsr1h	equ	0xFE2
  3219                           fsr1l	equ	0xFE1
  3220                           bsr	equ	0xFE0
  3221                           indf2	equ	0xFDF
  3222                           postinc2	equ	0xFDE
  3223                           postdec2	equ	0xFDD
  3224                           fsr2h	equ	0xFDA
  3225                           fsr2l	equ	0xFD9
  3226                           status	equ	0xFD8
  3227                           
  3228 ;; *************** function _buttonReceived *****************
  3229 ;; Defined at:
  3230 ;;		line 101 in file "buttons.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  bp              2   42[COMRAM] PTR struct button
  3233 ;;		 -> NULL(0), buttons(120), 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;		None               void
  3238 ;; Registers used:
  3239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1
  3245 ;;      Params:         2       0       0
  3246 ;;      Locals:         0       0       0
  3247 ;;      Temps:          0       0       0
  3248 ;;      Totals:         2       0       0
  3249 ;;Total ram usage:        2 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    5
  3252 ;; This function calls:
  3253 ;;		_buttonDownPressed
  3254 ;;		_buttonUpPressed
  3255 ;; This function is called by:
  3256 ;;		_decodeButton
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text23
  3261  0004E6                     __ptext23:
  3262                           	opt stack 0
  3263  0004E6                     _buttonReceived:
  3264                           	opt stack 23
  3265                           
  3266                           ;buttons.c: 103: if ( bp == 0)
  3267                           
  3268                           ;incstack = 0
  3269  0004E6  502C               	movf	buttonReceived@bp+1,w,c
  3270  0004E8  102B               	iorwf	buttonReceived@bp,w,c
  3271  0004EA  B4D8               	btfsc	status,2,c
  3272  0004EC  0012               	return	
  3273                           
  3274                           ;buttons.c: 106: if (bp -> isActive == 0 && bp -> risingEdge != 0) {
  3275                           
  3276                           ;buttons.c: 104: return;
  3277  0004EE  EE20 F002          	lfsr	2,2
  3278  0004F2  502B               	movf	buttonReceived@bp,w,c
  3279  0004F4  26D9               	addwf	fsr2l,f,c
  3280  0004F6  502C               	movf	buttonReceived@bp+1,w,c
  3281  0004F8  22DA               	addwfc	fsr2h,f,c
  3282  0004FA  50DF               	movf	indf2,w,c
  3283  0004FC  A4D8               	btfss	status,2,c
  3284  0004FE  D023               	goto	l1075
  3285  000500  EE20 F004          	lfsr	2,4
  3286  000504  502B               	movf	buttonReceived@bp,w,c
  3287  000506  26D9               	addwf	fsr2l,f,c
  3288  000508  502C               	movf	buttonReceived@bp+1,w,c
  3289  00050A  22DA               	addwfc	fsr2h,f,c
  3290  00050C  50DE               	movf	postinc2,w,c
  3291  00050E  10DD               	iorwf	postdec2,w,c
  3292  000510  B4D8               	btfsc	status,2,c
  3293  000512  D019               	goto	l1075
  3294                           
  3295                           ;buttons.c: 107: bp -> risingEdge(bp -> buttonFunction);
  3296  000514  EE20 F004          	lfsr	2,4
  3297  000518  502B               	movf	buttonReceived@bp,w,c
  3298  00051A  26D9               	addwf	fsr2l,f,c
  3299  00051C  502C               	movf	buttonReceived@bp+1,w,c
  3300  00051E  22DA               	addwfc	fsr2h,f,c
  3301  000520  D801               	call	u78
  3302  000522  D011               	goto	l1075
  3303  000524                     u78:
  3304  000524  0005               	push	
  3305  000526  6EFA               	movwf	pclath,c
  3306  000528  50DE               	movf	postinc2,w,c
  3307  00052A  6EFD               	movwf	tosl,c
  3308  00052C  50DE               	movf	postinc2,w,c
  3309  00052E  6EFE               	movwf	tosh,c
  3310  000530  50F8               	movf	tblptru,w,c
  3311  000532  6EFF               	movwf	tosu,c
  3312  000534  50FA               	movf	pclath,w,c
  3313  000536  EE20 F001          	lfsr	2,1
  3314  00053A  502B               	movf	buttonReceived@bp,w,c
  3315  00053C  26D9               	addwf	fsr2l,f,c
  3316  00053E  502C               	movf	buttonReceived@bp+1,w,c
  3317  000540  22DA               	addwfc	fsr2h,f,c
  3318  000542  50DF               	movf	indf2,w,c
  3319  000544  0012               	return		;indir
  3320  000546                     l1075:
  3321                           
  3322                           ;buttons.c: 108: }
  3323                           ;buttons.c: 110: bp -> isActive = 1;
  3324  000546  EE20 F002          	lfsr	2,2
  3325  00054A  502B               	movf	buttonReceived@bp,w,c
  3326  00054C  26D9               	addwf	fsr2l,f,c
  3327  00054E  502C               	movf	buttonReceived@bp+1,w,c
  3328  000550  22DA               	addwfc	fsr2h,f,c
  3329  000552  0E01               	movlw	1
  3330  000554  6EDF               	movwf	indf2,c
  3331                           
  3332                           ;buttons.c: 111: bp -> watchdog = 0;
  3333  000556  EE20 F003          	lfsr	2,3
  3334  00055A  502B               	movf	buttonReceived@bp,w,c
  3335  00055C  26D9               	addwf	fsr2l,f,c
  3336  00055E  502C               	movf	buttonReceived@bp+1,w,c
  3337  000560  22DA               	addwfc	fsr2h,f,c
  3338  000562  0E00               	movlw	0
  3339  000564  6EDF               	movwf	indf2,c
  3340  000566  0012               	return	
  3341  000568                     __end_of_buttonReceived:
  3342                           	opt stack 0
  3343                           tosu	equ	0xFFF
  3344                           tosh	equ	0xFFE
  3345                           tosl	equ	0xFFD
  3346                           pclatu	equ	0xFFB
  3347                           pclath	equ	0xFFA
  3348                           tblptru	equ	0xFF8
  3349                           tblptrh	equ	0xFF7
  3350                           tblptrl	equ	0xFF6
  3351                           tablat	equ	0xFF5
  3352                           prodh	equ	0xFF4
  3353                           prodl	equ	0xFF3
  3354                           intcon	equ	0xFF2
  3355                           intcon2	equ	0xFF1
  3356                           postinc0	equ	0xFEE
  3357                           fsr0h	equ	0xFEA
  3358                           fsr0l	equ	0xFE9
  3359                           wreg	equ	0xFE8
  3360                           fsr1h	equ	0xFE2
  3361                           fsr1l	equ	0xFE1
  3362                           bsr	equ	0xFE0
  3363                           indf2	equ	0xFDF
  3364                           postinc2	equ	0xFDE
  3365                           postdec2	equ	0xFDD
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _buttonDownPressed *****************
  3371 ;; Defined at:
  3372 ;;		line 53 in file "shutter.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  shutternumbe    1    wreg     unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  shutternumbe    1   39[COMRAM] unsigned char 
  3377 ;;  sp              2   40[COMRAM] PTR struct shutter
  3378 ;;		 -> shutter(10), 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;		None               void
  3381 ;; Registers used:
  3382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1
  3388 ;;      Params:         0       0       0
  3389 ;;      Locals:         3       0       0
  3390 ;;      Temps:          0       0       0
  3391 ;;      Totals:         3       0       0
  3392 ;;Total ram usage:        3 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    4
  3395 ;; This function calls:
  3396 ;;		_fehler
  3397 ;; This function is called by:
  3398 ;;		_main
  3399 ;;		_masterDownPressed
  3400 ;;		_buttonReceived
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text24
  3405  000568                     __ptext24:
  3406                           	opt stack 0
  3407  000568                     _buttonDownPressed:
  3408                           	opt stack 24
  3409                           
  3410                           ;incstack = 0
  3411                           ;buttonDownPressed@shutternumber stored from wreg
  3412  000568  6E28               	movwf	buttonDownPressed@shutternumber,c
  3413                           
  3414                           ;shutter.c: 55: SHUTTER *sp = &shutter[shutternumber];
  3415  00056A  5028               	movf	buttonDownPressed@shutternumber,w,c
  3416  00056C  0D02               	mullw	2
  3417  00056E  0E53               	movlw	low _shutter
  3418  000570  24F3               	addwf	prodl,w,c
  3419  000572  6E29               	movwf	buttonDownPressed@sp,c
  3420  000574  0E00               	movlw	high _shutter
  3421  000576  20F4               	addwfc	prodh,w,c
  3422  000578  6E2A               	movwf	buttonDownPressed@sp+1,c
  3423                           
  3424                           ;shutter.c: 57: switch ( sp -> state ) {
  3425  00057A  D01F               	goto	l1043
  3426  00057C                     l1033:
  3427                           
  3428                           ;shutter.c: 60: sp -> state = 23;
  3429  00057C  C029  FFD9         	movff	buttonDownPressed@sp,fsr2l
  3430  000580  C02A  FFDA         	movff	buttonDownPressed@sp+1,fsr2h
  3431  000584  0E17               	movlw	23
  3432  000586  6EDF               	movwf	indf2,c
  3433                           
  3434                           ;shutter.c: 61: break;
  3435  000588  0012               	return	
  3436  00058A                     l1035:
  3437                           
  3438                           ;shutter.c: 63: sp -> state = 3;
  3439  00058A  C029  FFD9         	movff	buttonDownPressed@sp,fsr2l
  3440  00058E  C02A  FFDA         	movff	buttonDownPressed@sp+1,fsr2h
  3441  000592  0E03               	movlw	3
  3442  000594  6EDF               	movwf	indf2,c
  3443                           
  3444                           ;shutter.c: 64: break;
  3445  000596  0012               	return	
  3446  000598                     l1037:
  3447                           
  3448                           ;shutter.c: 66: sp -> state = 8;
  3449  000598  C029  FFD9         	movff	buttonDownPressed@sp,fsr2l
  3450  00059C  C02A  FFDA         	movff	buttonDownPressed@sp+1,fsr2h
  3451  0005A0  0E08               	movlw	8
  3452  0005A2  6EDF               	movwf	indf2,c
  3453  0005A4  0012               	return	
  3454  0005A6                     l1039:
  3455                           
  3456                           ;shutter.c: 70: fehler('D', sp -> state);
  3457  0005A6  C029  FFD9         	movff	buttonDownPressed@sp,fsr2l
  3458  0005AA  C02A  FFDA         	movff	buttonDownPressed@sp+1,fsr2h
  3459  0005AE  50DF               	movf	indf2,w,c
  3460  0005B0  6E24               	movwf	fehler@ls,c
  3461  0005B2  0E44               	movlw	68
  3462  0005B4  EC61  F005         	call	_fehler
  3463                           
  3464                           ;shutter.c: 71: break;
  3465  0005B8  0012               	return	
  3466  0005BA                     l1043:
  3467  0005BA  C029  FFD9         	movff	buttonDownPressed@sp,fsr2l
  3468  0005BE  C02A  FFDA         	movff	buttonDownPressed@sp+1,fsr2h
  3469  0005C2  50DF               	movf	indf2,w,c
  3470                           
  3471                           ; Switch size 1, requested type "space"
  3472                           ; Number of cases is 4, Range of values is 1 to 21
  3473                           ; switch strategies available:
  3474                           ; Name         Instructions Cycles
  3475                           ; simple_byte           13     7 (average)
  3476                           ;	Chosen strategy is simple_byte
  3477  0005C4  0A01               	xorlw	1	; case 1
  3478  0005C6  B4D8               	btfsc	status,2,c
  3479  0005C8  D7D9               	goto	l1033
  3480  0005CA  0A09               	xorlw	9	; case 8
  3481  0005CC  B4D8               	btfsc	status,2,c
  3482  0005CE  0012               	return	
  3483  0005D0  0A1C               	xorlw	28	; case 20
  3484  0005D2  B4D8               	btfsc	status,2,c
  3485  0005D4  D7DA               	goto	l1035
  3486  0005D6  0A01               	xorlw	1	; case 21
  3487  0005D8  B4D8               	btfsc	status,2,c
  3488  0005DA  D7DE               	goto	l1037
  3489  0005DC  D7E4               	goto	l1039
  3490  0005DE                     __end_of_buttonDownPressed:
  3491                           	opt stack 0
  3492                           tosu	equ	0xFFF
  3493                           tosh	equ	0xFFE
  3494                           tosl	equ	0xFFD
  3495                           pclatu	equ	0xFFB
  3496                           pclath	equ	0xFFA
  3497                           tblptru	equ	0xFF8
  3498                           tblptrh	equ	0xFF7
  3499                           tblptrl	equ	0xFF6
  3500                           tablat	equ	0xFF5
  3501                           prodh	equ	0xFF4
  3502                           prodl	equ	0xFF3
  3503                           intcon	equ	0xFF2
  3504                           intcon2	equ	0xFF1
  3505                           postinc0	equ	0xFEE
  3506                           fsr0h	equ	0xFEA
  3507                           fsr0l	equ	0xFE9
  3508                           wreg	equ	0xFE8
  3509                           fsr1h	equ	0xFE2
  3510                           fsr1l	equ	0xFE1
  3511                           bsr	equ	0xFE0
  3512                           indf2	equ	0xFDF
  3513                           postinc2	equ	0xFDE
  3514                           postdec2	equ	0xFDD
  3515                           fsr2h	equ	0xFDA
  3516                           fsr2l	equ	0xFD9
  3517                           status	equ	0xFD8
  3518                           
  3519 ;; *************** function _buttonUpPressed *****************
  3520 ;; Defined at:
  3521 ;;		line 18 in file "shutter.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  shutternumbe    1    wreg     unsigned char 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  shutternumbe    1   39[COMRAM] unsigned char 
  3526 ;;  sp              2   40[COMRAM] PTR struct shutter
  3527 ;;		 -> shutter(10), 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;		None               void
  3530 ;; Registers used:
  3531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1
  3537 ;;      Params:         0       0       0
  3538 ;;      Locals:         3       0       0
  3539 ;;      Temps:          0       0       0
  3540 ;;      Totals:         3       0       0
  3541 ;;Total ram usage:        3 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    4
  3544 ;; This function calls:
  3545 ;;		_fehler
  3546 ;; This function is called by:
  3547 ;;		_main
  3548 ;;		_masterUpPressed
  3549 ;;		_buttonReceived
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text25
  3554  0005DE                     __ptext25:
  3555                           	opt stack 0
  3556  0005DE                     _buttonUpPressed:
  3557                           	opt stack 24
  3558                           
  3559                           ;incstack = 0
  3560                           ;buttonUpPressed@shutternumber stored from wreg
  3561  0005DE  6E28               	movwf	buttonUpPressed@shutternumber,c
  3562                           
  3563                           ;shutter.c: 20: SHUTTER *sp = &shutter[shutternumber];
  3564  0005E0  5028               	movf	buttonUpPressed@shutternumber,w,c
  3565  0005E2  0D02               	mullw	2
  3566  0005E4  0E53               	movlw	low _shutter
  3567  0005E6  24F3               	addwf	prodl,w,c
  3568  0005E8  6E29               	movwf	buttonUpPressed@sp,c
  3569  0005EA  0E00               	movlw	high _shutter
  3570  0005EC  20F4               	addwfc	prodh,w,c
  3571  0005EE  6E2A               	movwf	buttonUpPressed@sp+1,c
  3572                           
  3573                           ;shutter.c: 22: switch ( sp -> state ) {
  3574  0005F0  D01F               	goto	l1029
  3575  0005F2                     l1019:
  3576                           
  3577                           ;shutter.c: 25: sp -> state = 22;
  3578  0005F2  C029  FFD9         	movff	buttonUpPressed@sp,fsr2l
  3579  0005F6  C02A  FFDA         	movff	buttonUpPressed@sp+1,fsr2h
  3580  0005FA  0E16               	movlw	22
  3581  0005FC  6EDF               	movwf	indf2,c
  3582                           
  3583                           ;shutter.c: 26: break;
  3584  0005FE  0012               	return	
  3585  000600                     l1021:
  3586                           
  3587                           ;shutter.c: 28: sp -> state = 2;
  3588  000600  C029  FFD9         	movff	buttonUpPressed@sp,fsr2l
  3589  000604  C02A  FFDA         	movff	buttonUpPressed@sp+1,fsr2h
  3590  000608  0E02               	movlw	2
  3591  00060A  6EDF               	movwf	indf2,c
  3592                           
  3593                           ;shutter.c: 29: break;
  3594  00060C  0012               	return	
  3595  00060E                     l1023:
  3596                           
  3597                           ;shutter.c: 31: sp -> state = 8;
  3598  00060E  C029  FFD9         	movff	buttonUpPressed@sp,fsr2l
  3599  000612  C02A  FFDA         	movff	buttonUpPressed@sp+1,fsr2h
  3600  000616  0E08               	movlw	8
  3601  000618  6EDF               	movwf	indf2,c
  3602                           
  3603                           ;shutter.c: 32: break;
  3604  00061A  0012               	return	
  3605  00061C                     l1025:
  3606                           
  3607                           ;shutter.c: 37: fehler('U', sp -> state);
  3608  00061C  C029  FFD9         	movff	buttonUpPressed@sp,fsr2l
  3609  000620  C02A  FFDA         	movff	buttonUpPressed@sp+1,fsr2h
  3610  000624  50DF               	movf	indf2,w,c
  3611  000626  6E24               	movwf	fehler@ls,c
  3612  000628  0E55               	movlw	85
  3613  00062A  EC61  F005         	call	_fehler
  3614                           
  3615                           ;shutter.c: 38: break;
  3616  00062E  0012               	return	
  3617  000630                     l1029:
  3618  000630  C029  FFD9         	movff	buttonUpPressed@sp,fsr2l
  3619  000634  C02A  FFDA         	movff	buttonUpPressed@sp+1,fsr2h
  3620  000638  50DF               	movf	indf2,w,c
  3621                           
  3622                           ; Switch size 1, requested type "space"
  3623                           ; Number of cases is 4, Range of values is 1 to 21
  3624                           ; switch strategies available:
  3625                           ; Name         Instructions Cycles
  3626                           ; simple_byte           13     7 (average)
  3627                           ;	Chosen strategy is simple_byte
  3628  00063A  0A01               	xorlw	1	; case 1
  3629  00063C  B4D8               	btfsc	status,2,c
  3630  00063E  D7D9               	goto	l1019
  3631  000640  0A09               	xorlw	9	; case 8
  3632  000642  B4D8               	btfsc	status,2,c
  3633  000644  0012               	return	
  3634  000646  0A1C               	xorlw	28	; case 20
  3635  000648  B4D8               	btfsc	status,2,c
  3636  00064A  D7E1               	goto	l1023
  3637  00064C  0A01               	xorlw	1	; case 21
  3638  00064E  B4D8               	btfsc	status,2,c
  3639  000650  D7D7               	goto	l1021
  3640  000652  D7E4               	goto	l1025
  3641  000654                     __end_of_buttonUpPressed:
  3642                           	opt stack 0
  3643                           tosu	equ	0xFFF
  3644                           tosh	equ	0xFFE
  3645                           tosl	equ	0xFFD
  3646                           pclatu	equ	0xFFB
  3647                           pclath	equ	0xFFA
  3648                           tblptru	equ	0xFF8
  3649                           tblptrh	equ	0xFF7
  3650                           tblptrl	equ	0xFF6
  3651                           tablat	equ	0xFF5
  3652                           prodh	equ	0xFF4
  3653                           prodl	equ	0xFF3
  3654                           intcon	equ	0xFF2
  3655                           intcon2	equ	0xFF1
  3656                           postinc0	equ	0xFEE
  3657                           fsr0h	equ	0xFEA
  3658                           fsr0l	equ	0xFE9
  3659                           wreg	equ	0xFE8
  3660                           fsr1h	equ	0xFE2
  3661                           fsr1l	equ	0xFE1
  3662                           bsr	equ	0xFE0
  3663                           indf2	equ	0xFDF
  3664                           postinc2	equ	0xFDE
  3665                           postdec2	equ	0xFDD
  3666                           fsr2h	equ	0xFDA
  3667                           fsr2l	equ	0xFD9
  3668                           status	equ	0xFD8
  3669                           
  3670 ;; *************** function _fehler *****************
  3671 ;; Defined at:
  3672 ;;		line 233 in file "shutter.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  updown          1    wreg     unsigned char 
  3675 ;;  ls              1   35[COMRAM] unsigned char 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  updown          1   38[COMRAM] unsigned char 
  3678 ;;  lastState       1   37[COMRAM] unsigned char 
  3679 ;;  modUpDown       1   36[COMRAM] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;		None               void
  3682 ;; Registers used:
  3683 ;;		wreg
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1
  3689 ;;      Params:         1       0       0
  3690 ;;      Locals:         3       0       0
  3691 ;;      Temps:          0       0       0
  3692 ;;      Totals:         4       0       0
  3693 ;;Total ram usage:        4 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    3
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_buttonUpPressed
  3700 ;;		_buttonDownPressed
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text26
  3705  000AC2                     __ptext26:
  3706                           	opt stack 0
  3707  000AC2                     _fehler:
  3708                           	opt stack 24
  3709                           
  3710                           ;incstack = 0
  3711                           ;fehler@updown stored from wreg
  3712  000AC2  6E27               	movwf	fehler@updown,c
  3713                           
  3714                           ;shutter.c: 235: char modUpDown = updown;
  3715  000AC4  C027  F025         	movff	fehler@updown,fehler@modUpDown
  3716                           
  3717                           ;shutter.c: 236: unsigned char lastState = ls;
  3718  000AC8  C024  F026         	movff	fehler@ls,fehler@lastState
  3719  000ACC                     l329:
  3720                           
  3721                           ;shutter.c: 239: ;
  3722  000ACC  D7FF               	goto	l329
  3723  000ACE                     __end_of_fehler:
  3724                           	opt stack 0
  3725                           tosu	equ	0xFFF
  3726                           tosh	equ	0xFFE
  3727                           tosl	equ	0xFFD
  3728                           pclatu	equ	0xFFB
  3729                           pclath	equ	0xFFA
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           prodh	equ	0xFF4
  3735                           prodl	equ	0xFF3
  3736                           intcon	equ	0xFF2
  3737                           intcon2	equ	0xFF1
  3738                           postinc0	equ	0xFEE
  3739                           fsr0h	equ	0xFEA
  3740                           fsr0l	equ	0xFE9
  3741                           wreg	equ	0xFE8
  3742                           fsr1h	equ	0xFE2
  3743                           fsr1l	equ	0xFE1
  3744                           bsr	equ	0xFE0
  3745                           indf2	equ	0xFDF
  3746                           postinc2	equ	0xFDE
  3747                           postdec2	equ	0xFDD
  3748                           fsr2h	equ	0xFDA
  3749                           fsr2l	equ	0xFD9
  3750                           status	equ	0xFD8
  3751                           
  3752 ;; *************** function _buttonsReset *****************
  3753 ;; Defined at:
  3754 ;;		line 126 in file "buttons.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;  bp              2   40[COMRAM] PTR struct button
  3759 ;;		 -> buttons(120), 
  3760 ;;  i               1   39[COMRAM] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;		None               void
  3763 ;; Registers used:
  3764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1
  3770 ;;      Params:         0       0       0
  3771 ;;      Locals:         3       0       0
  3772 ;;      Temps:          0       0       0
  3773 ;;      Totals:         3       0       0
  3774 ;;Total ram usage:        3 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    4
  3777 ;; This function calls:
  3778 ;;		_buttonDownReleased
  3779 ;;		_buttonUpReleased
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text27
  3786  000380                     __ptext27:
  3787                           	opt stack 0
  3788  000380                     _buttonsReset:
  3789                           	opt stack 26
  3790                           
  3791                           ;buttons.c: 128: unsigned char i;
  3792                           ;buttons.c: 130: BUTTON *bp = buttons;
  3793                           
  3794                           ;incstack = 0
  3795  000380  0100               	movlb	0	; () banked
  3796  000382  0E00               	movlw	high _buttons
  3797  000384  6E2A               	movwf	buttonsReset@bp+1,c
  3798  000386  0100               	movlb	0	; () banked
  3799  000388  0E80               	movlw	low _buttons
  3800  00038A  6E29               	movwf	buttonsReset@bp,c
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;buttons.c: 132: for ( i = 0; i < 12; i++) {
  3804  00038C  0E00               	movlw	0
  3805  00038E  6E28               	movwf	buttonsReset@i,c
  3806                           
  3807                           ; BSR set to: 0
  3808  000390  0E0B               	movlw	11
  3809  000392  6428               	cpfsgt	buttonsReset@i,c
  3810  000394  D001               	goto	l1307
  3811  000396  0012               	return	
  3812  000398                     l1307:
  3813                           
  3814                           ;buttons.c: 134: if (bp -> watchdog > 5) {
  3815  000398  EE20 F003          	lfsr	2,3
  3816  00039C  5029               	movf	buttonsReset@bp,w,c
  3817  00039E  26D9               	addwf	fsr2l,f,c
  3818  0003A0  502A               	movf	buttonsReset@bp+1,w,c
  3819  0003A2  22DA               	addwfc	fsr2h,f,c
  3820  0003A4  0E05               	movlw	5
  3821  0003A6  64DF               	cpfsgt	indf2,c
  3822  0003A8  D03D               	goto	l1319
  3823                           
  3824                           ;buttons.c: 136: if (bp -> isActive && bp -> fallingEdge != 0) {
  3825  0003AA  EE20 F002          	lfsr	2,2
  3826  0003AE  5029               	movf	buttonsReset@bp,w,c
  3827  0003B0  26D9               	addwf	fsr2l,f,c
  3828  0003B2  502A               	movf	buttonsReset@bp+1,w,c
  3829  0003B4  22DA               	addwfc	fsr2h,f,c
  3830  0003B6  50DF               	movf	indf2,w,c
  3831  0003B8  B4D8               	btfsc	status,2,c
  3832  0003BA  D02B               	goto	l1317
  3833  0003BC  EE20 F006          	lfsr	2,6
  3834  0003C0  5029               	movf	buttonsReset@bp,w,c
  3835  0003C2  26D9               	addwf	fsr2l,f,c
  3836  0003C4  502A               	movf	buttonsReset@bp+1,w,c
  3837  0003C6  22DA               	addwfc	fsr2h,f,c
  3838  0003C8  50DE               	movf	postinc2,w,c
  3839  0003CA  10DD               	iorwf	postdec2,w,c
  3840  0003CC  B4D8               	btfsc	status,2,c
  3841  0003CE  D021               	goto	l1317
  3842                           
  3843                           ;buttons.c: 137: bp -> fallingEdge(bp -> buttonFunction);
  3844  0003D0  EE20 F006          	lfsr	2,6
  3845  0003D4  5029               	movf	buttonsReset@bp,w,c
  3846  0003D6  26D9               	addwf	fsr2l,f,c
  3847  0003D8  502A               	movf	buttonsReset@bp+1,w,c
  3848  0003DA  22DA               	addwfc	fsr2h,f,c
  3849  0003DC  D801               	call	u338
  3850  0003DE  D011               	goto	u339
  3851  0003E0                     u338:
  3852  0003E0  0005               	push	
  3853  0003E2  6EFA               	movwf	pclath,c
  3854  0003E4  50DE               	movf	postinc2,w,c
  3855  0003E6  6EFD               	movwf	tosl,c
  3856  0003E8  50DE               	movf	postinc2,w,c
  3857  0003EA  6EFE               	movwf	tosh,c
  3858  0003EC  50F8               	movf	tblptru,w,c
  3859  0003EE  6EFF               	movwf	tosu,c
  3860  0003F0  50FA               	movf	pclath,w,c
  3861  0003F2  EE20 F001          	lfsr	2,1
  3862  0003F6  5029               	movf	buttonsReset@bp,w,c
  3863  0003F8  26D9               	addwf	fsr2l,f,c
  3864  0003FA  502A               	movf	buttonsReset@bp+1,w,c
  3865  0003FC  22DA               	addwfc	fsr2h,f,c
  3866  0003FE  50DF               	movf	indf2,w,c
  3867  000400  0012               	return		;indir
  3868  000402                     u339:
  3869                           
  3870                           ;buttons.c: 138: bp -> watchdog = 0;
  3871  000402  EE20 F003          	lfsr	2,3
  3872  000406  5029               	movf	buttonsReset@bp,w,c
  3873  000408  26D9               	addwf	fsr2l,f,c
  3874  00040A  502A               	movf	buttonsReset@bp+1,w,c
  3875  00040C  22DA               	addwfc	fsr2h,f,c
  3876  00040E  0E00               	movlw	0
  3877  000410  6EDF               	movwf	indf2,c
  3878  000412                     l1317:
  3879                           
  3880                           ;buttons.c: 139: }
  3881                           ;buttons.c: 140: bp -> isActive = 0;
  3882  000412  EE20 F002          	lfsr	2,2
  3883  000416  5029               	movf	buttonsReset@bp,w,c
  3884  000418  26D9               	addwf	fsr2l,f,c
  3885  00041A  502A               	movf	buttonsReset@bp+1,w,c
  3886  00041C  22DA               	addwfc	fsr2h,f,c
  3887  00041E  0E00               	movlw	0
  3888  000420  6EDF               	movwf	indf2,c
  3889                           
  3890                           ;buttons.c: 141: }
  3891  000422  D010               	goto	l1323
  3892  000424                     l1319:
  3893                           
  3894                           ;buttons.c: 142: else {
  3895                           ;buttons.c: 143: if (bp -> isActive) {
  3896  000424  EE20 F002          	lfsr	2,2
  3897  000428  5029               	movf	buttonsReset@bp,w,c
  3898  00042A  26D9               	addwf	fsr2l,f,c
  3899  00042C  502A               	movf	buttonsReset@bp+1,w,c
  3900  00042E  22DA               	addwfc	fsr2h,f,c
  3901  000430  50DF               	movf	indf2,w,c
  3902  000432  B4D8               	btfsc	status,2,c
  3903  000434  D007               	goto	l1323
  3904                           
  3905                           ;buttons.c: 144: bp -> watchdog++;
  3906  000436  EE20 F003          	lfsr	2,3
  3907  00043A  5029               	movf	buttonsReset@bp,w,c
  3908  00043C  26D9               	addwf	fsr2l,f,c
  3909  00043E  502A               	movf	buttonsReset@bp+1,w,c
  3910  000440  22DA               	addwfc	fsr2h,f,c
  3911  000442  2ADF               	incf	indf2,f,c
  3912  000444                     l1323:
  3913                           
  3914                           ;buttons.c: 145: }
  3915                           ;buttons.c: 146: }
  3916                           ;buttons.c: 147: bp++;
  3917  000444  0E0A               	movlw	10
  3918  000446  2629               	addwf	buttonsReset@bp,f,c
  3919  000448  0E00               	movlw	0
  3920  00044A  222A               	addwfc	buttonsReset@bp+1,f,c
  3921  00044C  2A28               	incf	buttonsReset@i,f,c
  3922  00044E  0E0B               	movlw	11
  3923  000450  6428               	cpfsgt	buttonsReset@i,c
  3924  000452  D7A2               	goto	l1307
  3925  000454  0012               	return	
  3926  000456                     __end_of_buttonsReset:
  3927                           	opt stack 0
  3928                           tosu	equ	0xFFF
  3929                           tosh	equ	0xFFE
  3930                           tosl	equ	0xFFD
  3931                           pclatu	equ	0xFFB
  3932                           pclath	equ	0xFFA
  3933                           tblptru	equ	0xFF8
  3934                           tblptrh	equ	0xFF7
  3935                           tblptrl	equ	0xFF6
  3936                           tablat	equ	0xFF5
  3937                           prodh	equ	0xFF4
  3938                           prodl	equ	0xFF3
  3939                           intcon	equ	0xFF2
  3940                           intcon2	equ	0xFF1
  3941                           postinc0	equ	0xFEE
  3942                           fsr0h	equ	0xFEA
  3943                           fsr0l	equ	0xFE9
  3944                           wreg	equ	0xFE8
  3945                           fsr1h	equ	0xFE2
  3946                           fsr1l	equ	0xFE1
  3947                           bsr	equ	0xFE0
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           postdec2	equ	0xFDD
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function _buttonDownReleased *****************
  3956 ;; Defined at:
  3957 ;;		line 76 in file "shutter.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  shutternumbe    1    wreg     unsigned char 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  shutternumbe    1   36[COMRAM] unsigned char 
  3962 ;;  sp              2   37[COMRAM] PTR struct shutter
  3963 ;;		 -> shutter(10), 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;		None               void
  3966 ;; Registers used:
  3967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1
  3973 ;;      Params:         0       0       0
  3974 ;;      Locals:         3       0       0
  3975 ;;      Temps:          1       0       0
  3976 ;;      Totals:         4       0       0
  3977 ;;Total ram usage:        4 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    3
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;;		_masterDownReleased
  3985 ;;		_buttonsReset
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text28
  3990  000872                     __ptext28:
  3991                           	opt stack 0
  3992  000872                     _buttonDownReleased:
  3993                           	opt stack 25
  3994                           
  3995                           ;incstack = 0
  3996                           ;buttonDownReleased@shutternumber stored from wreg
  3997  000872  6E25               	movwf	buttonDownReleased@shutternumber,c
  3998                           
  3999                           ;shutter.c: 78: SHUTTER *sp = &shutter[shutternumber];
  4000  000874  5025               	movf	buttonDownReleased@shutternumber,w,c
  4001  000876  0D02               	mullw	2
  4002  000878  0E53               	movlw	low _shutter
  4003  00087A  24F3               	addwf	prodl,w,c
  4004  00087C  6E26               	movwf	buttonDownReleased@sp,c
  4005  00087E  0E00               	movlw	high _shutter
  4006  000880  20F4               	addwfc	prodh,w,c
  4007  000882  6E27               	movwf	buttonDownReleased@sp+1,c
  4008                           
  4009                           ;shutter.c: 80: if ( sp -> count < 20 ) {
  4010  000884  EE20 F001          	lfsr	2,1
  4011  000888  5026               	movf	buttonDownReleased@sp,w,c
  4012  00088A  26D9               	addwf	fsr2l,f,c
  4013  00088C  5027               	movf	buttonDownReleased@sp+1,w,c
  4014  00088E  22DA               	addwfc	fsr2h,f,c
  4015  000890  50DF               	movf	indf2,w,c
  4016  000892  6E24               	movwf	??_buttonDownReleased& (0+255),c
  4017  000894  0E14               	movlw	20
  4018  000896  5C24               	subwf	??_buttonDownReleased,w,c
  4019  000898  B0D8               	btfsc	status,0,c
  4020  00089A  0012               	return	
  4021                           
  4022                           ;shutter.c: 81: sp -> state = 8;
  4023  00089C  C026  FFD9         	movff	buttonDownReleased@sp,fsr2l
  4024  0008A0  C027  FFDA         	movff	buttonDownReleased@sp+1,fsr2h
  4025  0008A4  0E08               	movlw	8
  4026  0008A6  6EDF               	movwf	indf2,c
  4027  0008A8  0012               	return	
  4028  0008AA                     __end_of_buttonDownReleased:
  4029                           	opt stack 0
  4030                           tosu	equ	0xFFF
  4031                           tosh	equ	0xFFE
  4032                           tosl	equ	0xFFD
  4033                           pclatu	equ	0xFFB
  4034                           pclath	equ	0xFFA
  4035                           tblptru	equ	0xFF8
  4036                           tblptrh	equ	0xFF7
  4037                           tblptrl	equ	0xFF6
  4038                           tablat	equ	0xFF5
  4039                           prodh	equ	0xFF4
  4040                           prodl	equ	0xFF3
  4041                           intcon	equ	0xFF2
  4042                           intcon2	equ	0xFF1
  4043                           postinc0	equ	0xFEE
  4044                           fsr0h	equ	0xFEA
  4045                           fsr0l	equ	0xFE9
  4046                           wreg	equ	0xFE8
  4047                           fsr1h	equ	0xFE2
  4048                           fsr1l	equ	0xFE1
  4049                           bsr	equ	0xFE0
  4050                           indf2	equ	0xFDF
  4051                           postinc2	equ	0xFDE
  4052                           postdec2	equ	0xFDD
  4053                           fsr2h	equ	0xFDA
  4054                           fsr2l	equ	0xFD9
  4055                           status	equ	0xFD8
  4056                           
  4057 ;; *************** function _buttonUpReleased *****************
  4058 ;; Defined at:
  4059 ;;		line 43 in file "shutter.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  shutternumbe    1    wreg     unsigned char 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  shutternumbe    1   36[COMRAM] unsigned char 
  4064 ;;  sp              2   37[COMRAM] PTR struct shutter
  4065 ;;		 -> shutter(10), 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1
  4075 ;;      Params:         0       0       0
  4076 ;;      Locals:         3       0       0
  4077 ;;      Temps:          1       0       0
  4078 ;;      Totals:         4       0       0
  4079 ;;Total ram usage:        4 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    3
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_main
  4086 ;;		_masterUpReleased
  4087 ;;		_buttonsReset
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text29
  4092  0008AA                     __ptext29:
  4093                           	opt stack 0
  4094  0008AA                     _buttonUpReleased:
  4095                           	opt stack 25
  4096                           
  4097                           ;incstack = 0
  4098                           ;buttonUpReleased@shutternumber stored from wreg
  4099  0008AA  6E25               	movwf	buttonUpReleased@shutternumber,c
  4100                           
  4101                           ;shutter.c: 45: SHUTTER *sp = &shutter[shutternumber];
  4102  0008AC  5025               	movf	buttonUpReleased@shutternumber,w,c
  4103  0008AE  0D02               	mullw	2
  4104  0008B0  0E53               	movlw	low _shutter
  4105  0008B2  24F3               	addwf	prodl,w,c
  4106  0008B4  6E26               	movwf	buttonUpReleased@sp,c
  4107  0008B6  0E00               	movlw	high _shutter
  4108  0008B8  20F4               	addwfc	prodh,w,c
  4109  0008BA  6E27               	movwf	buttonUpReleased@sp+1,c
  4110                           
  4111                           ;shutter.c: 47: if ( sp -> count < 20 ) {
  4112  0008BC  EE20 F001          	lfsr	2,1
  4113  0008C0  5026               	movf	buttonUpReleased@sp,w,c
  4114  0008C2  26D9               	addwf	fsr2l,f,c
  4115  0008C4  5027               	movf	buttonUpReleased@sp+1,w,c
  4116  0008C6  22DA               	addwfc	fsr2h,f,c
  4117  0008C8  50DF               	movf	indf2,w,c
  4118  0008CA  6E24               	movwf	??_buttonUpReleased& (0+255),c
  4119  0008CC  0E14               	movlw	20
  4120  0008CE  5C24               	subwf	??_buttonUpReleased,w,c
  4121  0008D0  B0D8               	btfsc	status,0,c
  4122  0008D2  0012               	return	
  4123                           
  4124                           ;shutter.c: 48: sp -> state = 8;
  4125  0008D4  C026  FFD9         	movff	buttonUpReleased@sp,fsr2l
  4126  0008D8  C027  FFDA         	movff	buttonUpReleased@sp+1,fsr2h
  4127  0008DC  0E08               	movlw	8
  4128  0008DE  6EDF               	movwf	indf2,c
  4129  0008E0  0012               	return	
  4130  0008E2                     __end_of_buttonUpReleased:
  4131                           	opt stack 0
  4132                           tosu	equ	0xFFF
  4133                           tosh	equ	0xFFE
  4134                           tosl	equ	0xFFD
  4135                           pclatu	equ	0xFFB
  4136                           pclath	equ	0xFFA
  4137                           tblptru	equ	0xFF8
  4138                           tblptrh	equ	0xFF7
  4139                           tblptrl	equ	0xFF6
  4140                           tablat	equ	0xFF5
  4141                           prodh	equ	0xFF4
  4142                           prodl	equ	0xFF3
  4143                           intcon	equ	0xFF2
  4144                           intcon2	equ	0xFF1
  4145                           postinc0	equ	0xFEE
  4146                           fsr0h	equ	0xFEA
  4147                           fsr0l	equ	0xFE9
  4148                           wreg	equ	0xFE8
  4149                           fsr1h	equ	0xFE2
  4150                           fsr1l	equ	0xFE1
  4151                           bsr	equ	0xFE0
  4152                           indf2	equ	0xFDF
  4153                           postinc2	equ	0xFDE
  4154                           postdec2	equ	0xFDD
  4155                           fsr2h	equ	0xFDA
  4156                           fsr2l	equ	0xFD9
  4157                           status	equ	0xFD8
  4158                           
  4159 ;; *************** function _high_isr *****************
  4160 ;; Defined at:
  4161 ;;		line 16 in file "interrupts.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  data            1   34[COMRAM] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;		None               void
  4168 ;; Registers used:
  4169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1
  4175 ;;      Params:         0       0       0
  4176 ;;      Locals:         1       0       0
  4177 ;;      Temps:         14       0       0
  4178 ;;      Totals:        15       0       0
  4179 ;;Total ram usage:       15 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    1
  4182 ;; This function calls:
  4183 ;;		_fifoPut
  4184 ;; This function is called by:
  4185 ;;		Interrupt level 2
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	intcode
  4190  000008                     __pintcode:
  4191                           	opt stack 0
  4192  000008                     _high_isr:
  4193                           	opt stack 23
  4194                           
  4195                           ;incstack = 0
  4196  000008  CFFA F015          	movff	pclath,??_high_isr
  4197  00000C  CFFB F016          	movff	pclatu,??_high_isr+1
  4198  000010  CFE9 F017          	movff	fsr0l,??_high_isr+2
  4199  000014  EF2A  F003         	goto	int_func
  4200                           tosu	equ	0xFFF
  4201                           tosh	equ	0xFFE
  4202                           tosl	equ	0xFFD
  4203                           pclatu	equ	0xFFB
  4204                           pclath	equ	0xFFA
  4205                           tblptru	equ	0xFF8
  4206                           tblptrh	equ	0xFF7
  4207                           tblptrl	equ	0xFF6
  4208                           tablat	equ	0xFF5
  4209                           prodh	equ	0xFF4
  4210                           prodl	equ	0xFF3
  4211                           intcon	equ	0xFF2
  4212                           intcon2	equ	0xFF1
  4213                           postinc0	equ	0xFEE
  4214                           fsr0h	equ	0xFEA
  4215                           fsr0l	equ	0xFE9
  4216                           wreg	equ	0xFE8
  4217                           fsr1h	equ	0xFE2
  4218                           fsr1l	equ	0xFE1
  4219                           bsr	equ	0xFE0
  4220                           indf2	equ	0xFDF
  4221                           postinc2	equ	0xFDE
  4222                           postdec2	equ	0xFDD
  4223                           fsr2h	equ	0xFDA
  4224                           fsr2l	equ	0xFD9
  4225                           status	equ	0xFD8
  4226                           
  4227                           	psect	intcode_body
  4228  000654                     __pintcode_body:
  4229                           	opt stack 23
  4230  000654                     int_func:
  4231                           	opt stack 23
  4232  000654  CFEA F018          	movff	fsr0h,??_high_isr+3
  4233  000658  CFE1 F019          	movff	fsr1l,??_high_isr+4
  4234  00065C  CFE2 F01A          	movff	fsr1h,??_high_isr+5
  4235  000660  CFD9 F01B          	movff	fsr2l,??_high_isr+6
  4236  000664  CFDA F01C          	movff	fsr2h,??_high_isr+7
  4237  000668  CFF3 F01D          	movff	prodl,??_high_isr+8
  4238  00066C  CFF4 F01E          	movff	prodh,??_high_isr+9
  4239  000670  CFF6 F01F          	movff	tblptrl,??_high_isr+10
  4240  000674  CFF7 F020          	movff	tblptrh,??_high_isr+11
  4241  000678  CFF8 F021          	movff	tblptru,??_high_isr+12
  4242  00067C  CFF5 F022          	movff	tablat,??_high_isr+13
  4243                           
  4244                           ;interrupts.c: 18: unsigned char data;
  4245                           ;interrupts.c: 21: if (PIR1bits.RCIF == 1) {
  4246  000680  AA9E               	btfss	3998,5,c	;volatile
  4247  000682  D006               	goto	i2l24
  4248                           
  4249                           ;interrupts.c: 23: data = RCREG;
  4250  000684  CFAE F023          	movff	4014,high_isr@data	;volatile
  4251                           
  4252                           ;interrupts.c: 24: fifoPut(data);
  4253  000688  5023               	movf	high_isr@data,w,c
  4254  00068A  EC02  F005         	call	_fifoPut
  4255                           
  4256                           ;interrupts.c: 25: PIR1bits.RCIF = 0;
  4257  00068E  9A9E               	bcf	3998,5,c	;volatile
  4258  000690                     i2l24:
  4259  000690  C022  FFF5         	movff	??_high_isr+13,tablat
  4260  000694  C021  FFF8         	movff	??_high_isr+12,tblptru
  4261  000698  C020  FFF7         	movff	??_high_isr+11,tblptrh
  4262  00069C  C01F  FFF6         	movff	??_high_isr+10,tblptrl
  4263  0006A0  C01E  FFF4         	movff	??_high_isr+9,prodh
  4264  0006A4  C01D  FFF3         	movff	??_high_isr+8,prodl
  4265  0006A8  C01C  FFDA         	movff	??_high_isr+7,fsr2h
  4266  0006AC  C01B  FFD9         	movff	??_high_isr+6,fsr2l
  4267  0006B0  C01A  FFE2         	movff	??_high_isr+5,fsr1h
  4268  0006B4  C019  FFE1         	movff	??_high_isr+4,fsr1l
  4269  0006B8  C018  FFEA         	movff	??_high_isr+3,fsr0h
  4270  0006BC  C017  FFE9         	movff	??_high_isr+2,fsr0l
  4271  0006C0  C016  FFFB         	movff	??_high_isr+1,pclatu
  4272  0006C4  C015  FFFA         	movff	??_high_isr,pclath
  4273  0006C8  0011               	retfie		f
  4274  0006CA                     __end_of_high_isr:
  4275                           	opt stack 0
  4276                           tosu	equ	0xFFF
  4277                           tosh	equ	0xFFE
  4278                           tosl	equ	0xFFD
  4279                           pclatu	equ	0xFFB
  4280                           pclath	equ	0xFFA
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           intcon	equ	0xFF2
  4288                           intcon2	equ	0xFF1
  4289                           postinc0	equ	0xFEE
  4290                           fsr0h	equ	0xFEA
  4291                           fsr0l	equ	0xFE9
  4292                           wreg	equ	0xFE8
  4293                           fsr1h	equ	0xFE2
  4294                           fsr1l	equ	0xFE1
  4295                           bsr	equ	0xFE0
  4296                           indf2	equ	0xFDF
  4297                           postinc2	equ	0xFDE
  4298                           postdec2	equ	0xFDD
  4299                           fsr2h	equ	0xFDA
  4300                           fsr2l	equ	0xFD9
  4301                           status	equ	0xFD8
  4302                           
  4303 ;; *************** function _fifoPut *****************
  4304 ;; Defined at:
  4305 ;;		line 53 in file "fifo.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  in              1    wreg     unsigned char 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  in              1   19[COMRAM] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;		None               void
  4312 ;; Registers used:
  4313 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1
  4319 ;;      Params:         0       0       0
  4320 ;;      Locals:         1       0       0
  4321 ;;      Temps:          2       0       0
  4322 ;;      Totals:         3       0       0
  4323 ;;Total ram usage:        3 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_high_isr
  4329 ;;		_sendSwitchOn
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text32
  4334  000A04                     __ptext32:
  4335                           	opt stack 0
  4336  000A04                     _fifoPut:
  4337                           	opt stack 23
  4338                           
  4339                           ;incstack = 0
  4340                           ;fifoPut@in stored from wreg
  4341  000A04  6E14               	movwf	fifoPut@in,c
  4342                           
  4343                           ;fifo.c: 59: fifo[fifoIn++ & 0x0F] = in;
  4344  000A06  504F               	movf	_fifoIn,w,c
  4345  000A08  0B0F               	andlw	15
  4346  000A0A  6E12               	movwf	??_fifoPut& (0+255),c
  4347  000A0C  6A13               	clrf	(??_fifoPut+1)& (0+255),c
  4348  000A0E  0E37               	movlw	low _fifo
  4349  000A10  2412               	addwf	??_fifoPut,w,c
  4350  000A12  6ED9               	movwf	fsr2l,c
  4351  000A14  0E00               	movlw	high _fifo
  4352  000A16  2013               	addwfc	??_fifoPut+1,w,c
  4353  000A18  6EDA               	movwf	fsr2h,c
  4354  000A1A  C014  FFDF         	movff	fifoPut@in,indf2
  4355  000A1E  2A4F               	incf	_fifoIn,f,c
  4356  000A20  0012               	return	
  4357  000A22                     __end_of_fifoPut:
  4358                           	opt stack 0
  4359  0000                     tosu	equ	0xFFF
  4360                           tosh	equ	0xFFE
  4361                           tosl	equ	0xFFD
  4362                           pclatu	equ	0xFFB
  4363                           pclath	equ	0xFFA
  4364                           tblptru	equ	0xFF8
  4365                           tblptrh	equ	0xFF7
  4366                           tblptrl	equ	0xFF6
  4367                           tablat	equ	0xFF5
  4368                           prodh	equ	0xFF4
  4369                           prodl	equ	0xFF3
  4370                           intcon	equ	0xFF2
  4371                           intcon2	equ	0xFF1
  4372                           postinc0	equ	0xFEE
  4373                           fsr0h	equ	0xFEA
  4374                           fsr0l	equ	0xFE9
  4375                           wreg	equ	0xFE8
  4376                           fsr1h	equ	0xFE2
  4377                           fsr1l	equ	0xFE1
  4378                           bsr	equ	0xFE0
  4379                           indf2	equ	0xFDF
  4380                           postinc2	equ	0xFDE
  4381                           postdec2	equ	0xFDD
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           tosu	equ	0xFFF
  4386                           tosh	equ	0xFFE
  4387                           tosl	equ	0xFFD
  4388                           pclatu	equ	0xFFB
  4389                           pclath	equ	0xFFA
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           prodh	equ	0xFF4
  4395                           prodl	equ	0xFF3
  4396                           intcon	equ	0xFF2
  4397                           intcon2	equ	0xFF1
  4398                           postinc0	equ	0xFEE
  4399                           fsr0h	equ	0xFEA
  4400                           fsr0l	equ	0xFE9
  4401                           wreg	equ	0xFE8
  4402                           fsr1h	equ	0xFE2
  4403                           fsr1l	equ	0xFE1
  4404                           bsr	equ	0xFE0
  4405                           indf2	equ	0xFDF
  4406                           postinc2	equ	0xFDE
  4407                           postdec2	equ	0xFDD
  4408                           fsr2h	equ	0xFDA
  4409                           fsr2l	equ	0xFD9
  4410                           status	equ	0xFD8
  4411                           
  4412                           	psect	text33
  4413  000000                     __ptext33:
  4414                           	opt stack 0
  4415                           tosu	equ	0xFFF
  4416                           tosh	equ	0xFFE
  4417                           tosl	equ	0xFFD
  4418                           pclatu	equ	0xFFB
  4419                           pclath	equ	0xFFA
  4420                           tblptru	equ	0xFF8
  4421                           tblptrh	equ	0xFF7
  4422                           tblptrl	equ	0xFF6
  4423                           tablat	equ	0xFF5
  4424                           prodh	equ	0xFF4
  4425                           prodl	equ	0xFF3
  4426                           intcon	equ	0xFF2
  4427                           intcon2	equ	0xFF1
  4428                           postinc0	equ	0xFEE
  4429                           fsr0h	equ	0xFEA
  4430                           fsr0l	equ	0xFE9
  4431                           wreg	equ	0xFE8
  4432                           fsr1h	equ	0xFE2
  4433                           fsr1l	equ	0xFE1
  4434                           bsr	equ	0xFE0
  4435                           indf2	equ	0xFDF
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           fsr2h	equ	0xFDA
  4439                           fsr2l	equ	0xFD9
  4440                           status	equ	0xFD8
  4441                           
  4442                           	psect	rparam
  4443  0000                     tosu	equ	0xFFF
  4444                           tosh	equ	0xFFE
  4445                           tosl	equ	0xFFD
  4446                           pclatu	equ	0xFFB
  4447                           pclath	equ	0xFFA
  4448                           tblptru	equ	0xFF8
  4449                           tblptrh	equ	0xFF7
  4450                           tblptrl	equ	0xFF6
  4451                           tablat	equ	0xFF5
  4452                           prodh	equ	0xFF4
  4453                           prodl	equ	0xFF3
  4454                           intcon	equ	0xFF2
  4455                           intcon2	equ	0xFF1
  4456                           postinc0	equ	0xFEE
  4457                           fsr0h	equ	0xFEA
  4458                           fsr0l	equ	0xFE9
  4459                           wreg	equ	0xFE8
  4460                           fsr1h	equ	0xFE2
  4461                           fsr1l	equ	0xFE1
  4462                           bsr	equ	0xFE0
  4463                           indf2	equ	0xFDF
  4464                           postinc2	equ	0xFDE
  4465                           postdec2	equ	0xFDD
  4466                           fsr2h	equ	0xFDA
  4467                           fsr2l	equ	0xFD9
  4468                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         190
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      92
    BANK0           160      0     152
    BANK1           256      0       0

Pointer List with Targets:

    shutterStateMachine@sp	PTR struct shutter size(2) Largest target is 10
		 -> shutter(COMRAM[10]), 

    buttonDownReleased@sp	PTR struct shutter size(2) Largest target is 10
		 -> shutter(COMRAM[10]), 

    buttonDownPressed@sp	PTR struct shutter size(2) Largest target is 10
		 -> shutter(COMRAM[10]), 

    buttonUpReleased@sp	PTR struct shutter size(2) Largest target is 10
		 -> shutter(COMRAM[10]), 

    buttonUpPressed@sp	PTR struct shutter size(2) Largest target is 10
		 -> shutter(COMRAM[10]), 

    buttonsReset@bp.state	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    buttonsReset@bp.fallingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownReleased(), buttonUpReleased(), 

    buttonsReset@bp.risingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownPressed(), buttonUpPressed(), 

    buttonsReset@bp	PTR struct button size(2) Largest target is 120
		 -> buttons(BANK0[120]), 

    decodeButton@bp.state	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    decodeButton@bp.fallingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownReleased(), buttonUpReleased(), 

    decodeButton@bp.risingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownPressed(), buttonUpPressed(), 

    decodeButton@bp	PTR struct button size(2) Largest target is 120
		 -> NULL(NULL[0]), buttons(BANK0[120]), 

    buttonReceived@bp.state	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    buttonReceived@bp.fallingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownReleased(), buttonUpReleased(), 

    buttonReceived@bp.risingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownPressed(), buttonUpPressed(), 

    buttonReceived@bp	PTR struct button size(2) Largest target is 120
		 -> NULL(NULL[0]), buttons(BANK0[120]), 

    initButton@state	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    initButton@fallingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownReleased(), buttonUpReleased(), 

    initButton@risingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownPressed(), buttonUpPressed(), 

    initButton@bp.state	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    initButton@bp.fallingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownReleased(), buttonUpReleased(), 

    initButton@bp.risingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownPressed(), buttonUpPressed(), 

    initButton@bp	PTR struct button size(2) Largest target is 120
		 -> buttons(BANK0[120]), 

    sp__findButton	PTR struct button size(2) Largest target is 120
		 -> NULL(NULL[0]), buttons(BANK0[120]), 

    S407button$state	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    buttons.state	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    S407button$fallingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownReleased(), buttonUpReleased(), 

    buttons.fallingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownReleased(), buttonUpReleased(), 

    S407button$risingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownPressed(), buttonUpPressed(), 

    buttons.risingEdge	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> buttonDownPressed(), buttonUpPressed(), 


Critical Paths under _main in COMRAM

    _main->_byteReceived
    _testeMasterTaster->_masterDownPressed
    _testeMasterTaster->_masterUpPressed
    _masterUpReleased->_buttonUpReleased
    _masterUpPressed->_buttonUpPressed
    _masterDownReleased->_buttonDownReleased
    _masterDownPressed->_buttonDownPressed
    _shutterStateMachine->_shutterDirectionDown
    _shutterStateMachine->_shutterDirectionUp
    _shutterStateMachine->_shutterOff
    _shutterStateMachine->_shutterOn
    _byteReceived->_decodeButton
    _decodeButton->_buttonReceived
    _buttonReceived->_buttonDownPressed
    _buttonReceived->_buttonUpPressed
    _buttonUpPressed->_fehler
    _buttonDownPressed->_fehler
    _buttonsReset->_buttonDownReleased
    _buttonsReset->_buttonUpReleased

Critical Paths under _high_isr in COMRAM

    _high_isr->_fifoPut

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3317
                                             51 COMRAM     3     3      0
                       _buttonsReset
                       _byteReceived
                          _fifoEmpty
                            _fifoGet
                     _getNumShutters
                         _initButton
                    _initButtonTimer
                       _initHardware
                       _initProtocol
                          _initRS485
            _initShutterStateMachine
                _shutterStateMachine
                  _testeMasterTaster
 ---------------------------------------------------------------------------------
 (1) _testeMasterTaster                                    0     0      0     682
                  _masterDownPressed
                 _masterDownReleased
                    _masterUpPressed
                   _masterUpReleased
 ---------------------------------------------------------------------------------
 (2) _masterUpReleased                                     2     2      0      90
                                             39 COMRAM     1     1      0
                   _buttonUpReleased
 ---------------------------------------------------------------------------------
 (2) _masterUpPressed                                      2     2      0     251
                                             42 COMRAM     1     1      0
                    _buttonUpPressed
 ---------------------------------------------------------------------------------
 (2) _masterDownReleased                                   2     2      0      90
                                             39 COMRAM     1     1      0
                 _buttonDownReleased
 ---------------------------------------------------------------------------------
 (2) _masterDownPressed                                    2     2      0     251
                                             42 COMRAM     1     1      0
                  _buttonDownPressed
 ---------------------------------------------------------------------------------
 (1) _shutterStateMachine                                  3     3      0     480
                                             36 COMRAM     3     3      0
               _shutterDirectionDown
                 _shutterDirectionUp
                         _shutterOff
                          _shutterOn
 ---------------------------------------------------------------------------------
 (2) _shutterOn                                            1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _shutterOff                                           1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _shutterDirectionUp                                   1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _shutterDirectionDown                                 1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initShutterStateMachine                              1     1      0      45
                                             35 COMRAM     1     1      0
                     _getNumShutters
 ---------------------------------------------------------------------------------
 (2) _getNumShutters                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initRS485                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initProtocol                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHardware                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initButtonTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initButton                                          11     3      8    1055
                                             35 COMRAM    11     3      8
 ---------------------------------------------------------------------------------
 (1) _fifoGet                                              3     3      0       0
                                             35 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _fifoEmpty                                            1     1      0       0
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _byteReceived                                         4     4      0     785
                                             47 COMRAM     4     4      0
                       _decodeButton
 ---------------------------------------------------------------------------------
 (2) _decodeButton                                         3     3      0     680
                                             44 COMRAM     3     3      0
                     _buttonReceived
                         _findButton
 ---------------------------------------------------------------------------------
 (3) _findButton                                           4     2      2      75
                                             35 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _buttonReceived                                       2     0      2     575
                                             42 COMRAM     2     0      2
                  _buttonDownPressed *
                    _buttonUpPressed *
 ---------------------------------------------------------------------------------
 (3) _buttonUpPressed                                      3     3      0     206
                                             39 COMRAM     3     3      0
                             _fehler
 ---------------------------------------------------------------------------------
 (3) _buttonDownPressed                                    3     3      0     206
                                             39 COMRAM     3     3      0
                             _fehler
 ---------------------------------------------------------------------------------
 (4) _fehler                                               4     3      1     116
                                             35 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _buttonsReset                                         3     3      0     255
                                             39 COMRAM     3     3      0
                 _buttonDownReleased *
                   _buttonUpReleased *
 ---------------------------------------------------------------------------------
 (3) _buttonUpReleased                                     4     4      0      45
                                             35 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _buttonDownReleased                                   4     4      0      45
                                             35 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                            15    15      0      30
                                             20 COMRAM    15    15      0
                            _fifoPut
 ---------------------------------------------------------------------------------
 (8) _fifoPut                                              3     3      0      15
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonsReset
     _buttonDownReleased *
     _buttonUpReleased *
   _byteReceived
     _decodeButton
       _buttonReceived
         _buttonDownPressed *
           _fehler
         _buttonUpPressed *
           _fehler
       _findButton
   _fifoEmpty
   _fifoGet
   _getNumShutters
   _initButton
   _initButtonTimer
   _initHardware
   _initProtocol
   _initRS485
   _initShutterStateMachine
     _getNumShutters
   _shutterStateMachine
     _shutterDirectionDown
     _shutterDirectionUp
     _shutterOff
     _shutterOn
   _testeMasterTaster
     _masterDownPressed
       _buttonDownPressed
         _fehler
     _masterDownReleased
       _buttonDownReleased
     _masterUpPressed
       _buttonUpPressed
         _fehler
     _masterUpReleased
       _buttonUpReleased

 _low_isr (ROOT)

 _high_isr (ROOT)
   _fifoPut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      98       4       95.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     36      5C       1       96.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F4       7        0.0%
DATA                 0      0      F4       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Mar 30 07:54:39 2015

                                _c 004C                                 u78 0524  
                 buttonReceived@bp 002B                                 bsr 000FE0  
             __end_of_decodeButton 0A04                      _bShutterTimer 004A  
                  _entprellCounter 0047                       __CFG_CP0$OFF 000000  
          __end_of_initButtonTimer 0984                       __CFG_CP1$OFF 000000  
                              l350 09CA                                l343 09AA  
                              l352 09D0                                l329 0ACC  
                              l361 091E                                l345 09B0  
                              l370 0946                                l357 0914  
                              l366 093C                                l299 00FA  
                     __CFG_CPB$OFF 000000                                u230 0AA8  
                              u338 03E0                       __CFG_CPD$OFF 000000  
                              u339 0402                       __CFG_BORV$19 000000  
                              prod 000FF3              ??_shutterStateMachine 0025  
                              tosl 000FFD                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                               l1021 0600  
                             l1023 060E                               l1025 061C  
                             l1033 057C                               l1019 05F2  
                             l1035 058A                               l1043 05BA  
                             l1051 07EE                               l1131 0A82  
                             l1107 0A4A                               l1029 0630  
                             l1037 0598                               l1039 05A6  
                             l1143 0A66                               l1119 0A2E  
                             l1057 081E                               l1233 07DA  
                             l1153 09D6                               l1323 0444  
                             l1307 0398                               l1075 0546  
                             l1163 0928                               l1317 0412  
                             l1229 07A8                               l1173 0950  
                             l1341 012E                               l1319 0424  
                             l1415 0718                               l1407 0706  
                             l1281 0742                               l1361 019E  
                             l1345 0142                               l1337 011A  
                             l1179 09B6                               l1355 017A  
                             l1373 01E6                               l1349 0156  
                             l1367 01C2                               l1383 0226  
                             l1297 0788                               l1289 075C  
                             l1377 0206                               l1481 0358  
                             l1491 037A                               l1475 034A  
                             l1485 0368                               l1469 032E  
                             l1399 06F4                               l1489 0370  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               i1l29 0080  
                             i2l24 0690                  _masterDownPressed 0A76  
                             _data 0060                               _fifo 0037  
                             _main 027A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                 ?_masterDownPressed 0001  
                             start 00C6                  ??_masterUpPressed 002B  
                    __CFG_IESO$OFF 000000                  _testeMasterTaster 06CA  
                    __CFG_FOSC$IRC 000000        __size_of_shutterDirectionUp 0028  
                    __CFG_MCLRE$ON 000000                 ?_testeMasterTaster 0001  
                     high_isr@data 0023                      _protocolState 0051  
              ??_masterDownPressed 002B                ??_testeMasterTaster 002C  
                            ?_main 0001                              _ANSEL 000F7E  
               _masterDownReleased 0A5A                              _RCREG 000FAE  
                   __CFG_BBSIZ$OFF 000000                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _PORTA 000F80  
                            _PORTB 000F81                              _PORTC 000F82  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                    __end_of_fifoGet 0910  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                  __end_of_fifoPut 0A22                     __CFG_EBTR1$OFF 000000  
                ?_masterUpReleased 0001                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                ?_masterDownReleased 0001  
               ??_masterUpReleased 0028          __end_of_masterDownPressed 0A92  
     buttonUpPressed@shutternumber 0028                    __end_of_low_isr 00C6  
                            pclath 000FFA                              tablat 000FF5  
                            status 000FD8          __end_of_testeMasterTaster 072E  
                   __CFG_HFOFST$ON 000000                      ?_byteReceived 0001  
    buttonUpReleased@shutternumber 0025                      ?_initHardware 0001  
                  __initialization 0984                       __end_of_main 0380  
             ??_masterDownReleased 0028                     __CFG_PCLKEN$ON 000000  
                 decodeButton@code 002F                   ?_initButtonTimer 0001  
                           ??_main 0034                      __activetblptr 000002  
                   __CFG_PLLEN$OFF 000000                      ?_initProtocol 0001  
                           _ANSELH 000F7F                        initButton@i 002C  
                           i1l1439 006E                     __CFG_WDTEN$OFF 000000  
                           _OSCCON 000FD3                             _SPBRG1 000FAF  
                           _SPBRGH 000FB0                             _TXREG1 000FAD  
                   ??_byteReceived 0030                     ??_initHardware 0024  
                    ?_buttonsReset 0001                     __CFG_PWRTEN$ON 000000  
                   __CFG_XINST$OFF 000000              __size_of_decodeButton 001E  
                 __end_of_high_isr 06CA                  buttonUpPressed@sp 0029  
                   __CFG_STVREN$ON 000000                   byteReceived@code 0032  
                           _fifoIn 004F                             _fehler 0AC2  
         ?_initShutterStateMachine 0001                             _device 004D  
                           _button 004B                             clear_0 098A  
                           clear_1 0996                          ??_fifoGet 0024  
                        ??_fifoPut 0012                     ??_initProtocol 0024  
                        ??_low_isr 0001                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
  shutterDirectionUp@shutternumber 0024                    _buttonUpPressed 05DE  
       __size_of_masterDownPressed 001C            shutterOff@shutternumber 0024  
                     _decodeButton 09E6                         __accesstop 0060  
          __end_of__initialization 099C         __size_of_testeMasterTaster 0064  
       __end_of_buttonDownReleased 08AA                     ??_buttonsReset 0028  
    __size_of_shutterDirectionDown 0028          __size_of_buttonUpReleased 0038  
                   __pcstackCOMRAM 0001              masterUpReleased@dummy 0001  
               __size_of_fifoEmpty 001A                    _masterUpPressed 0A3E  
                       __pbssBANK0 0060                 __size_of_initRS485 0016  
               buttonUpReleased@sp 0026               byteReceived@checksum 0031  
                          ?_fehler 0024                            _CM1CON0 000F6D  
                          _CM2CON0 000F6B        __end_of_shutterStateMachine 027A  
                       _findButton 07E6            __end_of_buttonUpPressed 0654  
                     initButton@bf 0025                       initButton@bn 0024  
                     initButton@bp 002D               __end_of_byteReceived 078E  
   buttonDownPressed@shutternumber 0028               __end_of_initHardware 0872  
               __size_of_shutterOn 0020                   masterUpPressed@i 002B  
                        ?_high_isr 0001         __end_of_shutterDirectionUp 0938  
          masterDownReleased@dummy 0001                  __end_of_fifoEmpty 0AAC  
                          __Hparam 0000          __size_of_masterUpReleased 001C  
                          __Lparam 0000               __end_of_initProtocol 0AD4  
                       _initButton 0456            __size_of_buttonReceived 0082  
                  __size_of_fehler 000C                  __end_of_initRS485 0AC2  
                          __pcinit 0984                            __ramtop 0200  
                          _fifoGet 08E2                            _fifoOut 0050  
                          _fifoPut 0A04                            __ptext0 027A  
                          __ptext1 06CA                            __ptext2 0A22  
                          __ptext3 0A3E                            __ptext4 0A5A  
                          __ptext5 0A76                            __ptext6 00CA  
                          __ptext7 09A6                            __ptext8 09C6  
                          __ptext9 0910            __end_of_masterUpPressed 0A5A  
                        _T0CONbits 000FD5                          _T1CONbits 000FCD  
          __size_of_getNumShutters 0004                            _buttons 0080  
             __end_of_buttonsReset 0456                            _low_isr 0018  
                          _upState 0052                            _shutter 0053  
                       ??_high_isr 0015                     __pintcode_body 0654  
             end_of_initialization 099C                      __Lmediumconst 0000  
                          int_func 0654                   _buttonUpReleased 08AA  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE                  __end_of_shutterOn 09C6  
      __size_of_masterDownReleased 001C                        ?_findButton 0024  
                        _PORTAbits 000F80                          _PORTCbits 000F82  
                 ?_buttonUpPressed 0001                          _TRISAbits 000F92  
                        _TRISCbits 000F94   __size_of_initShutterStateMachine 0058  
         __size_of_initButtonTimer 0024                         _shutterOff 09C6  
              buttonDownPressed@sp 0029                        ?_initButton 0024  
                   decodeButton@bp 002D             masterDownPressed@dummy 0001  
            __size_of_byteReceived 0060                        _BAUDCONbits 000FB8  
                   __end_of_fehler 0ACE                 _buttonDownReleased 0872  
            __size_of_initHardware 0042                   ?_masterUpPressed 0001  
     __end_of_shutterDirectionDown 0960                start_initialization 0984  
              ?_buttonDownReleased 0001              __size_of_initProtocol 0006  
              __size_of_findButton 004A                       _byteReceived 072E  
                 _masterUpReleased 0A22               ??_buttonDownReleased 0024  
                     _initHardware 0830                     _buttonReceived 04E6  
                         ??_fehler 0025              shutterStateMachine@sp 0026  
            __size_of_buttonsReset 00D6                     _getNumShutters 0AD4  
                      __pbssCOMRAM 0037    buttonDownReleased@shutternumber 0025  
shutterDirectionDown@shutternumber 0024                       _initProtocol 0ACE  
                      ?_shutterOff 0001                __size_of_initButton 0090  
            initButton@fallingEdge 0028                masterDownReleased@i 0028  
                    byteReceived@b 0033                  __size_of_high_isr 06C2  
                ??_initButtonTimer 0024                       _buttonsReset 0380  
           __end_of_buttonReceived 0568                          __pintcode 0008  
                        _fifoEmpty 0A92                        __pintcodelo 0018  
               _shutterDirectionUp 0910             __end_of_getNumShutters 0AD8  
                         ?_fifoGet 0001                           ?_fifoPut 0001  
                        _initRS485 0AAC           __end_of_buttonUpReleased 08E2  
                        _downState 004E                ?_shutterDirectionUp 0001  
          _initShutterStateMachine 078E                           ?_low_isr 0001  
     __size_of_shutterStateMachine 01B0                  masterUpReleased@i 0028  
                         _LATBbits 000F8A                           _LATCbits 000F8B  
                         _IPR1bits 000F9F                           _PIE1bits 000F9D  
             _shutterDirectionDown 0938               ??_shutterDirectionUp 0024  
                         _PIR1bits 000F9E                    ?_buttonReceived 002B  
                         _RCONbits 000FD0                   __CFG_WDTPS$32768 000000  
                       ?_fifoEmpty 0001                          fifoPut@in 0014  
                   findButton@code 0026                __size_of_shutterOff 0020  
                     ??_findButton 0026                    ?_getNumShutters 0001  
                        _shutterOn 09A6                         ?_initRS485 0001  
                      _INTCON2bits 000FF1                  _buttonDownPressed 0568  
                    ?_decodeButton 0001                 ?_buttonDownPressed 0001  
                  fehler@lastState 0026              ?_shutterDirectionDown 0001  
               __end_of_findButton 0830                    fehler@modUpDown 0025  
                         __Hrparam 0000         __end_of_masterDownReleased 0A76  
                         __Lrparam 0000                       ??_initButton 002C  
               __CFG_BOREN$SBORDIS 000000                ??_buttonDownPressed 0028  
                     _bButtonTimer 0049                         ?_shutterOn 0001  
        ??_initShutterStateMachine 0024                   __size_of_fifoGet 002E  
                 __size_of_fifoPut 001E           __end_of_masterUpReleased 0A3E  
                 __size_of_low_isr 00AE                           __ptext10 0938  
                         __ptext11 078E                           __ptext20 072E  
                         __ptext12 0AD4                           __ptext21 09E6  
                         __ptext13 0AAC                           __ptext22 07E6  
                         __ptext14 0ACE                           __ptext23 04E6  
                         __ptext15 0830                           __ptext32 0A04  
                         __ptext24 0568                           __ptext16 0960  
                         __ptext33 0000                           __ptext25 05DE  
                         __ptext17 0456                           __ptext26 0AC2  
                         __ptext18 08E2                           __ptext27 0380  
                         __ptext19 0A92                           __ptext28 0872  
                         __ptext29 08AA          __end_of_buttonDownPressed 05DE  
         __size_of_buttonUpPressed 0076                           _high_isr 0008  
                   ??_decodeButton 002D                 __end_of_initButton 04E6  
               masterDownPressed@i 002B                      __size_of_main 0106  
                     fehler@updown 0027                     buttonsReset@bp 0029  
                         fehler@ls 0024                           fifoGet@v 0026  
                      ??_fifoEmpty 0024                    initButton@state 002A  
                         main@recv 0035           shutterStateMachine@which 0025  
                      ??_initRS485 0024                         _INTCONbits 000FF2  
                  _initButtonTimer 0960                       ??_shutterOff 0024  
         __size_of_masterUpPressed 001C                           intlevel1 0000  
                         intlevel2 0000             shutterOn@shutternumber 0024  
         initShutterStateMachine@i 0024             ??_shutterDirectionDown 0024  
  __end_of_initShutterStateMachine 07E6                         _RCSTA1bits 000FAB  
                    buttonsReset@i 0028                         _OSCCONbits 000FD3  
      __size_of_buttonDownReleased 0038                _shutterStateMachine 00CA  
               __end_of_shutterOff 09E6                        ??_shutterOn 0024  
                ?_buttonUpReleased 0001               buttonDownReleased@sp 0026  
             ?_shutterStateMachine 0001                        findButton@i 0027  
             initButton@risingEdge 0026         __size_of_buttonDownPressed 0076  
               ??_buttonUpReleased 0024               masterUpPressed@dummy 0001  
                 ??_buttonReceived 002D                  ??_buttonUpPressed 0028  
                 ??_getNumShutters 0024  
